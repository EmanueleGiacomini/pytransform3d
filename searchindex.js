Search.setIndex({"docnames": ["_apidoc/pytransform3d.batch_rotations.active_matrices_from_angles", "_apidoc/pytransform3d.batch_rotations.active_matrices_from_extrinsic_euler_angles", "_apidoc/pytransform3d.batch_rotations.active_matrices_from_intrinsic_euler_angles", "_apidoc/pytransform3d.batch_rotations.angles_between_vectors", "_apidoc/pytransform3d.batch_rotations.axis_angles_from_matrices", "_apidoc/pytransform3d.batch_rotations.batch_concatenate_quaternions", "_apidoc/pytransform3d.batch_rotations.batch_q_conj", "_apidoc/pytransform3d.batch_rotations.batch_quaternion_wxyz_from_xyzw", "_apidoc/pytransform3d.batch_rotations.batch_quaternion_xyzw_from_wxyz", "_apidoc/pytransform3d.batch_rotations.cross_product_matrices", "_apidoc/pytransform3d.batch_rotations.matrices_from_compact_axis_angles", "_apidoc/pytransform3d.batch_rotations.matrices_from_quaternions", "_apidoc/pytransform3d.batch_rotations.norm_vectors", "_apidoc/pytransform3d.batch_rotations.quaternion_slerp_batch", "_apidoc/pytransform3d.batch_rotations.quaternions_from_matrices", "_apidoc/pytransform3d.batch_rotations.smooth_quaternion_trajectory", "_apidoc/pytransform3d.camera.cam2sensor", "_apidoc/pytransform3d.camera.make_world_grid", "_apidoc/pytransform3d.camera.make_world_line", "_apidoc/pytransform3d.camera.plot_camera", "_apidoc/pytransform3d.camera.sensor2img", "_apidoc/pytransform3d.camera.world2image", "_apidoc/pytransform3d.coordinates.cartesian_from_cylindrical", "_apidoc/pytransform3d.coordinates.cartesian_from_spherical", "_apidoc/pytransform3d.coordinates.cylindrical_from_cartesian", "_apidoc/pytransform3d.coordinates.cylindrical_from_spherical", "_apidoc/pytransform3d.coordinates.spherical_from_cartesian", "_apidoc/pytransform3d.coordinates.spherical_from_cylindrical", "_apidoc/pytransform3d.editor.TransformEditor", "_apidoc/pytransform3d.plot_utils.Arrow3D", "_apidoc/pytransform3d.plot_utils.Frame", "_apidoc/pytransform3d.plot_utils.LabeledFrame", "_apidoc/pytransform3d.plot_utils.Trajectory", "_apidoc/pytransform3d.plot_utils.make_3d_axis", "_apidoc/pytransform3d.plot_utils.plot_box", "_apidoc/pytransform3d.plot_utils.plot_capsule", "_apidoc/pytransform3d.plot_utils.plot_cone", "_apidoc/pytransform3d.plot_utils.plot_cylinder", "_apidoc/pytransform3d.plot_utils.plot_ellipsoid", "_apidoc/pytransform3d.plot_utils.plot_length_variable", "_apidoc/pytransform3d.plot_utils.plot_mesh", "_apidoc/pytransform3d.plot_utils.plot_sphere", "_apidoc/pytransform3d.plot_utils.plot_vector", "_apidoc/pytransform3d.plot_utils.remove_frame", "_apidoc/pytransform3d.rotations.active_matrix_from_angle", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_xyx", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_xyz", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_xzx", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_xzy", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_yxy", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_yxz", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_yzx", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_yzy", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_zxy", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_zxz", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_zyx", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_zyz", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_roll_pitch_yaw", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_xyx", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_xyz", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_xzx", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_xzy", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_yxy", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_yxz", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_yzx", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_yzy", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_zxy", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_zxz", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_zyx", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_zyz", "_apidoc/pytransform3d.rotations.angle_between_vectors", "_apidoc/pytransform3d.rotations.assert_axis_angle_equal", "_apidoc/pytransform3d.rotations.assert_compact_axis_angle_equal", "_apidoc/pytransform3d.rotations.assert_euler_xyz_equal", "_apidoc/pytransform3d.rotations.assert_euler_zyx_equal", "_apidoc/pytransform3d.rotations.assert_quaternion_equal", "_apidoc/pytransform3d.rotations.assert_rotation_matrix", "_apidoc/pytransform3d.rotations.axis_angle_from_compact_axis_angle", "_apidoc/pytransform3d.rotations.axis_angle_from_matrix", "_apidoc/pytransform3d.rotations.axis_angle_from_quaternion", "_apidoc/pytransform3d.rotations.axis_angle_from_two_directions", "_apidoc/pytransform3d.rotations.axis_angle_slerp", "_apidoc/pytransform3d.rotations.check_axis_angle", "_apidoc/pytransform3d.rotations.check_compact_axis_angle", "_apidoc/pytransform3d.rotations.check_matrix", "_apidoc/pytransform3d.rotations.check_quaternion", "_apidoc/pytransform3d.rotations.check_quaternions", "_apidoc/pytransform3d.rotations.check_rotor", "_apidoc/pytransform3d.rotations.check_skew_symmetric_matrix", "_apidoc/pytransform3d.rotations.compact_axis_angle", "_apidoc/pytransform3d.rotations.compact_axis_angle_from_matrix", "_apidoc/pytransform3d.rotations.compact_axis_angle_from_quaternion", "_apidoc/pytransform3d.rotations.concatenate_quaternions", "_apidoc/pytransform3d.rotations.concatenate_rotors", "_apidoc/pytransform3d.rotations.cross_product_matrix", "_apidoc/pytransform3d.rotations.euler_xyz_from_matrix", "_apidoc/pytransform3d.rotations.euler_zyx_from_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_xyx_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_xyz_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_xzx_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_xzy_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_yxy_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_yxz_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_yzx_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_yzy_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_zxy_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_zxz_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_zyx_from_active_matrix", "_apidoc/pytransform3d.rotations.extrinsic_euler_zyz_from_active_matrix", "_apidoc/pytransform3d.rotations.geometric_product", "_apidoc/pytransform3d.rotations.intrinsic_euler_xyx_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_xyz_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_xzx_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_xzy_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_yxy_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_yxz_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_yzx_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_yzy_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_zxy_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_zxz_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_zyx_from_active_matrix", "_apidoc/pytransform3d.rotations.intrinsic_euler_zyz_from_active_matrix", "_apidoc/pytransform3d.rotations.matrix_from", "_apidoc/pytransform3d.rotations.matrix_from_angle", "_apidoc/pytransform3d.rotations.matrix_from_axis_angle", "_apidoc/pytransform3d.rotations.matrix_from_compact_axis_angle", "_apidoc/pytransform3d.rotations.matrix_from_euler_xyz", "_apidoc/pytransform3d.rotations.matrix_from_euler_zyx", "_apidoc/pytransform3d.rotations.matrix_from_quaternion", "_apidoc/pytransform3d.rotations.matrix_from_rotor", "_apidoc/pytransform3d.rotations.matrix_from_two_vectors", "_apidoc/pytransform3d.rotations.norm_angle", "_apidoc/pytransform3d.rotations.norm_axis_angle", "_apidoc/pytransform3d.rotations.norm_compact_axis_angle", "_apidoc/pytransform3d.rotations.norm_matrix", "_apidoc/pytransform3d.rotations.norm_vector", "_apidoc/pytransform3d.rotations.passive_matrix_from_angle", "_apidoc/pytransform3d.rotations.perpendicular_to_vectors", "_apidoc/pytransform3d.rotations.pick_closest_quaternion", "_apidoc/pytransform3d.rotations.plane_basis_from_normal", "_apidoc/pytransform3d.rotations.plane_normal_from_bivector", "_apidoc/pytransform3d.rotations.plot_axis_angle", "_apidoc/pytransform3d.rotations.plot_basis", "_apidoc/pytransform3d.rotations.plot_bivector", "_apidoc/pytransform3d.rotations.q_conj", "_apidoc/pytransform3d.rotations.q_prod_vector", "_apidoc/pytransform3d.rotations.quaternion_diff", "_apidoc/pytransform3d.rotations.quaternion_dist", "_apidoc/pytransform3d.rotations.quaternion_from_axis_angle", "_apidoc/pytransform3d.rotations.quaternion_from_compact_axis_angle", "_apidoc/pytransform3d.rotations.quaternion_from_matrix", "_apidoc/pytransform3d.rotations.quaternion_gradient", "_apidoc/pytransform3d.rotations.quaternion_integrate", "_apidoc/pytransform3d.rotations.quaternion_slerp", "_apidoc/pytransform3d.rotations.quaternion_wxyz_from_xyzw", "_apidoc/pytransform3d.rotations.quaternion_xyzw_from_wxyz", "_apidoc/pytransform3d.rotations.random_axis_angle", "_apidoc/pytransform3d.rotations.random_compact_axis_angle", "_apidoc/pytransform3d.rotations.random_quaternion", "_apidoc/pytransform3d.rotations.random_vector", "_apidoc/pytransform3d.rotations.rotor_apply", "_apidoc/pytransform3d.rotations.rotor_from_plane_angle", "_apidoc/pytransform3d.rotations.rotor_from_two_directions", "_apidoc/pytransform3d.rotations.rotor_reverse", "_apidoc/pytransform3d.rotations.rotor_slerp", "_apidoc/pytransform3d.rotations.vector_projection", "_apidoc/pytransform3d.rotations.wedge", "_apidoc/pytransform3d.trajectories.batch_concatenate_dual_quaternions", "_apidoc/pytransform3d.trajectories.batch_dq_conj", "_apidoc/pytransform3d.trajectories.batch_dq_prod_vector", "_apidoc/pytransform3d.trajectories.concat_many_to_one", "_apidoc/pytransform3d.trajectories.concat_one_to_many", "_apidoc/pytransform3d.trajectories.dual_quaternions_from_pqs", "_apidoc/pytransform3d.trajectories.exponential_coordinates_from_transforms", "_apidoc/pytransform3d.trajectories.invert_transforms", "_apidoc/pytransform3d.trajectories.mirror_screw_axis_direction", "_apidoc/pytransform3d.trajectories.plot_trajectory", "_apidoc/pytransform3d.trajectories.pqs_from_dual_quaternions", "_apidoc/pytransform3d.trajectories.pqs_from_transforms", "_apidoc/pytransform3d.trajectories.transforms_from_exponential_coordinates", "_apidoc/pytransform3d.trajectories.transforms_from_pqs", "_apidoc/pytransform3d.transform_manager.TransformManager", "_apidoc/pytransform3d.transformations.adjoint_from_transform", "_apidoc/pytransform3d.transformations.assert_screw_parameters_equal", "_apidoc/pytransform3d.transformations.assert_transform", "_apidoc/pytransform3d.transformations.assert_unit_dual_quaternion", "_apidoc/pytransform3d.transformations.assert_unit_dual_quaternion_equal", "_apidoc/pytransform3d.transformations.check_dual_quaternion", "_apidoc/pytransform3d.transformations.check_exponential_coordinates", "_apidoc/pytransform3d.transformations.check_pq", "_apidoc/pytransform3d.transformations.check_screw_axis", "_apidoc/pytransform3d.transformations.check_screw_matrix", "_apidoc/pytransform3d.transformations.check_screw_parameters", "_apidoc/pytransform3d.transformations.check_transform", "_apidoc/pytransform3d.transformations.check_transform_log", "_apidoc/pytransform3d.transformations.concat", "_apidoc/pytransform3d.transformations.concatenate_dual_quaternions", "_apidoc/pytransform3d.transformations.dq_conj", "_apidoc/pytransform3d.transformations.dq_prod_vector", "_apidoc/pytransform3d.transformations.dq_q_conj", "_apidoc/pytransform3d.transformations.dual_quaternion_from_pq", "_apidoc/pytransform3d.transformations.dual_quaternion_from_screw_parameters", "_apidoc/pytransform3d.transformations.dual_quaternion_from_transform", "_apidoc/pytransform3d.transformations.dual_quaternion_power", "_apidoc/pytransform3d.transformations.dual_quaternion_sclerp", "_apidoc/pytransform3d.transformations.exponential_coordinates_from_screw_axis", "_apidoc/pytransform3d.transformations.exponential_coordinates_from_transform", "_apidoc/pytransform3d.transformations.exponential_coordinates_from_transform_log", "_apidoc/pytransform3d.transformations.invert_transform", "_apidoc/pytransform3d.transformations.norm_exponential_coordinates", "_apidoc/pytransform3d.transformations.plot_screw", "_apidoc/pytransform3d.transformations.plot_transform", "_apidoc/pytransform3d.transformations.pq_from_dual_quaternion", "_apidoc/pytransform3d.transformations.pq_from_transform", "_apidoc/pytransform3d.transformations.random_screw_axis", "_apidoc/pytransform3d.transformations.random_transform", "_apidoc/pytransform3d.transformations.rotate_transform", "_apidoc/pytransform3d.transformations.scale_transform", "_apidoc/pytransform3d.transformations.screw_axis_from_exponential_coordinates", "_apidoc/pytransform3d.transformations.screw_axis_from_screw_matrix", "_apidoc/pytransform3d.transformations.screw_axis_from_screw_parameters", "_apidoc/pytransform3d.transformations.screw_matrix_from_screw_axis", "_apidoc/pytransform3d.transformations.screw_matrix_from_transform_log", "_apidoc/pytransform3d.transformations.screw_parameters_from_dual_quaternion", "_apidoc/pytransform3d.transformations.screw_parameters_from_screw_axis", "_apidoc/pytransform3d.transformations.transform", "_apidoc/pytransform3d.transformations.transform_from", "_apidoc/pytransform3d.transformations.transform_from_dual_quaternion", "_apidoc/pytransform3d.transformations.transform_from_exponential_coordinates", "_apidoc/pytransform3d.transformations.transform_from_pq", "_apidoc/pytransform3d.transformations.transform_from_transform_log", "_apidoc/pytransform3d.transformations.transform_log_from_exponential_coordinates", "_apidoc/pytransform3d.transformations.transform_log_from_screw_matrix", "_apidoc/pytransform3d.transformations.transform_log_from_transform", "_apidoc/pytransform3d.transformations.translate_transform", "_apidoc/pytransform3d.transformations.vector_to_direction", "_apidoc/pytransform3d.transformations.vector_to_point", "_apidoc/pytransform3d.transformations.vectors_to_directions", "_apidoc/pytransform3d.transformations.vectors_to_points", "_apidoc/pytransform3d.urdf.Box", "_apidoc/pytransform3d.urdf.Cylinder", "_apidoc/pytransform3d.urdf.Geometry", "_apidoc/pytransform3d.urdf.Joint", "_apidoc/pytransform3d.urdf.Link", "_apidoc/pytransform3d.urdf.Mesh", "_apidoc/pytransform3d.urdf.Sphere", "_apidoc/pytransform3d.urdf.UrdfTransformManager", "_apidoc/pytransform3d.urdf.initialize_urdf_transform_manager", "_apidoc/pytransform3d.urdf.parse_urdf", "_apidoc/pytransform3d.visualizer.Artist", "_apidoc/pytransform3d.visualizer.Box", "_apidoc/pytransform3d.visualizer.Camera", "_apidoc/pytransform3d.visualizer.Capsule", "_apidoc/pytransform3d.visualizer.Cone", "_apidoc/pytransform3d.visualizer.Cylinder", "_apidoc/pytransform3d.visualizer.Ellipsoid", "_apidoc/pytransform3d.visualizer.Figure", "_apidoc/pytransform3d.visualizer.Frame", "_apidoc/pytransform3d.visualizer.Graph", "_apidoc/pytransform3d.visualizer.Line3D", "_apidoc/pytransform3d.visualizer.Mesh", "_apidoc/pytransform3d.visualizer.Plane", "_apidoc/pytransform3d.visualizer.PointCollection3D", "_apidoc/pytransform3d.visualizer.Sphere", "_apidoc/pytransform3d.visualizer.Trajectory", "_apidoc/pytransform3d.visualizer.Vector3D", "_apidoc/pytransform3d.visualizer.figure", "_auto_examples/animations/animate_angle_axis_interpolation", "_auto_examples/animations/animate_quaternion_integration", "_auto_examples/animations/animate_quaternion_interpolation", "_auto_examples/animations/animate_rotation", "_auto_examples/animations/animate_trajectory", "_auto_examples/animations/sg_execution_times", "_auto_examples/apps/app_transformation_editor", "_auto_examples/index", "_auto_examples/plots/plot_axis_angle", "_auto_examples/plots/plot_axis_angle_from_two_vectors", "_auto_examples/plots/plot_bivector", "_auto_examples/plots/plot_box", "_auto_examples/plots/plot_camera_3d", "_auto_examples/plots/plot_camera_projection", "_auto_examples/plots/plot_camera_trajectory", "_auto_examples/plots/plot_camera_with_image", "_auto_examples/plots/plot_collision_objects", "_auto_examples/plots/plot_compare_rotations", "_auto_examples/plots/plot_convention_rotation_global_local", "_auto_examples/plots/plot_cylinder", "_auto_examples/plots/plot_dual_quaternion_interpolation", "_auto_examples/plots/plot_euler_angles", "_auto_examples/plots/plot_frames", "_auto_examples/plots/plot_matrix_from_two_vectors", "_auto_examples/plots/plot_mesh", "_auto_examples/plots/plot_pose_trajectory", "_auto_examples/plots/plot_quaternion_integrate", "_auto_examples/plots/plot_quaternion_slerp", "_auto_examples/plots/plot_random_geometries", "_auto_examples/plots/plot_robot", "_auto_examples/plots/plot_rotate_cylinder", "_auto_examples/plots/plot_screw", "_auto_examples/plots/plot_sphere", "_auto_examples/plots/plot_spherical_grid", "_auto_examples/plots/plot_straight_line_path", "_auto_examples/plots/plot_transform", "_auto_examples/plots/plot_transform_concatenation", "_auto_examples/plots/plot_transform_manager", "_auto_examples/plots/plot_urdf", "_auto_examples/plots/plot_urdf_with_meshes", "_auto_examples/plots/plot_vector", "_auto_examples/plots/sg_execution_times", "_auto_examples/visualizations/render_urdf", "_auto_examples/visualizations/sg_execution_times", "_auto_examples/visualizations/vis_add_remove_artist", "_auto_examples/visualizations/vis_basis", "_auto_examples/visualizations/vis_box", "_auto_examples/visualizations/vis_camera_3d", "_auto_examples/visualizations/vis_capsule", "_auto_examples/visualizations/vis_cone", "_auto_examples/visualizations/vis_cylinder", "_auto_examples/visualizations/vis_ee_wrench", "_auto_examples/visualizations/vis_ellipsoid", "_auto_examples/visualizations/vis_mesh", "_auto_examples/visualizations/vis_moving_basis", "_auto_examples/visualizations/vis_moving_cylinder_with_wrench", "_auto_examples/visualizations/vis_moving_line", "_auto_examples/visualizations/vis_moving_robot", "_auto_examples/visualizations/vis_moving_trajectory", "_auto_examples/visualizations/vis_moving_urdf_with_meshes", "_auto_examples/visualizations/vis_plane", "_auto_examples/visualizations/vis_scatter", "_auto_examples/visualizations/vis_sphere", "_auto_examples/visualizations/vis_urdf", "_auto_examples/visualizations/vis_urdf_with_meshes", "_auto_examples/visualizations/vis_vector", "animations", "api", "camera", "euler_angles", "index", "notation", "rotations", "transform_manager", "transformation_ambiguities", "transformation_modeling", "transformations"], "filenames": ["_apidoc/pytransform3d.batch_rotations.active_matrices_from_angles.rst", "_apidoc/pytransform3d.batch_rotations.active_matrices_from_extrinsic_euler_angles.rst", "_apidoc/pytransform3d.batch_rotations.active_matrices_from_intrinsic_euler_angles.rst", "_apidoc/pytransform3d.batch_rotations.angles_between_vectors.rst", "_apidoc/pytransform3d.batch_rotations.axis_angles_from_matrices.rst", "_apidoc/pytransform3d.batch_rotations.batch_concatenate_quaternions.rst", "_apidoc/pytransform3d.batch_rotations.batch_q_conj.rst", "_apidoc/pytransform3d.batch_rotations.batch_quaternion_wxyz_from_xyzw.rst", "_apidoc/pytransform3d.batch_rotations.batch_quaternion_xyzw_from_wxyz.rst", "_apidoc/pytransform3d.batch_rotations.cross_product_matrices.rst", "_apidoc/pytransform3d.batch_rotations.matrices_from_compact_axis_angles.rst", "_apidoc/pytransform3d.batch_rotations.matrices_from_quaternions.rst", "_apidoc/pytransform3d.batch_rotations.norm_vectors.rst", "_apidoc/pytransform3d.batch_rotations.quaternion_slerp_batch.rst", "_apidoc/pytransform3d.batch_rotations.quaternions_from_matrices.rst", "_apidoc/pytransform3d.batch_rotations.smooth_quaternion_trajectory.rst", "_apidoc/pytransform3d.camera.cam2sensor.rst", "_apidoc/pytransform3d.camera.make_world_grid.rst", "_apidoc/pytransform3d.camera.make_world_line.rst", "_apidoc/pytransform3d.camera.plot_camera.rst", "_apidoc/pytransform3d.camera.sensor2img.rst", "_apidoc/pytransform3d.camera.world2image.rst", "_apidoc/pytransform3d.coordinates.cartesian_from_cylindrical.rst", "_apidoc/pytransform3d.coordinates.cartesian_from_spherical.rst", "_apidoc/pytransform3d.coordinates.cylindrical_from_cartesian.rst", "_apidoc/pytransform3d.coordinates.cylindrical_from_spherical.rst", "_apidoc/pytransform3d.coordinates.spherical_from_cartesian.rst", "_apidoc/pytransform3d.coordinates.spherical_from_cylindrical.rst", "_apidoc/pytransform3d.editor.TransformEditor.rst", "_apidoc/pytransform3d.plot_utils.Arrow3D.rst", "_apidoc/pytransform3d.plot_utils.Frame.rst", "_apidoc/pytransform3d.plot_utils.LabeledFrame.rst", "_apidoc/pytransform3d.plot_utils.Trajectory.rst", "_apidoc/pytransform3d.plot_utils.make_3d_axis.rst", "_apidoc/pytransform3d.plot_utils.plot_box.rst", "_apidoc/pytransform3d.plot_utils.plot_capsule.rst", "_apidoc/pytransform3d.plot_utils.plot_cone.rst", "_apidoc/pytransform3d.plot_utils.plot_cylinder.rst", "_apidoc/pytransform3d.plot_utils.plot_ellipsoid.rst", "_apidoc/pytransform3d.plot_utils.plot_length_variable.rst", "_apidoc/pytransform3d.plot_utils.plot_mesh.rst", "_apidoc/pytransform3d.plot_utils.plot_sphere.rst", "_apidoc/pytransform3d.plot_utils.plot_vector.rst", "_apidoc/pytransform3d.plot_utils.remove_frame.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_angle.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_xyx.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_xyz.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_xzx.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_xzy.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_yxy.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_yxz.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_yzx.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_yzy.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_zxy.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_zxz.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_zyx.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_euler_zyz.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_extrinsic_roll_pitch_yaw.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_xyx.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_xyz.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_xzx.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_xzy.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_yxy.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_yxz.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_yzx.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_yzy.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_zxy.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_zxz.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_zyx.rst", "_apidoc/pytransform3d.rotations.active_matrix_from_intrinsic_euler_zyz.rst", "_apidoc/pytransform3d.rotations.angle_between_vectors.rst", "_apidoc/pytransform3d.rotations.assert_axis_angle_equal.rst", "_apidoc/pytransform3d.rotations.assert_compact_axis_angle_equal.rst", "_apidoc/pytransform3d.rotations.assert_euler_xyz_equal.rst", "_apidoc/pytransform3d.rotations.assert_euler_zyx_equal.rst", "_apidoc/pytransform3d.rotations.assert_quaternion_equal.rst", "_apidoc/pytransform3d.rotations.assert_rotation_matrix.rst", "_apidoc/pytransform3d.rotations.axis_angle_from_compact_axis_angle.rst", "_apidoc/pytransform3d.rotations.axis_angle_from_matrix.rst", "_apidoc/pytransform3d.rotations.axis_angle_from_quaternion.rst", "_apidoc/pytransform3d.rotations.axis_angle_from_two_directions.rst", "_apidoc/pytransform3d.rotations.axis_angle_slerp.rst", "_apidoc/pytransform3d.rotations.check_axis_angle.rst", "_apidoc/pytransform3d.rotations.check_compact_axis_angle.rst", "_apidoc/pytransform3d.rotations.check_matrix.rst", "_apidoc/pytransform3d.rotations.check_quaternion.rst", "_apidoc/pytransform3d.rotations.check_quaternions.rst", "_apidoc/pytransform3d.rotations.check_rotor.rst", "_apidoc/pytransform3d.rotations.check_skew_symmetric_matrix.rst", "_apidoc/pytransform3d.rotations.compact_axis_angle.rst", "_apidoc/pytransform3d.rotations.compact_axis_angle_from_matrix.rst", "_apidoc/pytransform3d.rotations.compact_axis_angle_from_quaternion.rst", "_apidoc/pytransform3d.rotations.concatenate_quaternions.rst", "_apidoc/pytransform3d.rotations.concatenate_rotors.rst", "_apidoc/pytransform3d.rotations.cross_product_matrix.rst", "_apidoc/pytransform3d.rotations.euler_xyz_from_matrix.rst", "_apidoc/pytransform3d.rotations.euler_zyx_from_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_xyx_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_xyz_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_xzx_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_xzy_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_yxy_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_yxz_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_yzx_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_yzy_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_zxy_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_zxz_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_zyx_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.extrinsic_euler_zyz_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.geometric_product.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_xyx_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_xyz_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_xzx_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_xzy_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_yxy_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_yxz_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_yzx_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_yzy_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_zxy_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_zxz_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_zyx_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.intrinsic_euler_zyz_from_active_matrix.rst", "_apidoc/pytransform3d.rotations.matrix_from.rst", "_apidoc/pytransform3d.rotations.matrix_from_angle.rst", "_apidoc/pytransform3d.rotations.matrix_from_axis_angle.rst", "_apidoc/pytransform3d.rotations.matrix_from_compact_axis_angle.rst", "_apidoc/pytransform3d.rotations.matrix_from_euler_xyz.rst", "_apidoc/pytransform3d.rotations.matrix_from_euler_zyx.rst", "_apidoc/pytransform3d.rotations.matrix_from_quaternion.rst", "_apidoc/pytransform3d.rotations.matrix_from_rotor.rst", "_apidoc/pytransform3d.rotations.matrix_from_two_vectors.rst", "_apidoc/pytransform3d.rotations.norm_angle.rst", "_apidoc/pytransform3d.rotations.norm_axis_angle.rst", "_apidoc/pytransform3d.rotations.norm_compact_axis_angle.rst", "_apidoc/pytransform3d.rotations.norm_matrix.rst", "_apidoc/pytransform3d.rotations.norm_vector.rst", "_apidoc/pytransform3d.rotations.passive_matrix_from_angle.rst", "_apidoc/pytransform3d.rotations.perpendicular_to_vectors.rst", "_apidoc/pytransform3d.rotations.pick_closest_quaternion.rst", "_apidoc/pytransform3d.rotations.plane_basis_from_normal.rst", "_apidoc/pytransform3d.rotations.plane_normal_from_bivector.rst", "_apidoc/pytransform3d.rotations.plot_axis_angle.rst", "_apidoc/pytransform3d.rotations.plot_basis.rst", "_apidoc/pytransform3d.rotations.plot_bivector.rst", "_apidoc/pytransform3d.rotations.q_conj.rst", "_apidoc/pytransform3d.rotations.q_prod_vector.rst", "_apidoc/pytransform3d.rotations.quaternion_diff.rst", "_apidoc/pytransform3d.rotations.quaternion_dist.rst", "_apidoc/pytransform3d.rotations.quaternion_from_axis_angle.rst", "_apidoc/pytransform3d.rotations.quaternion_from_compact_axis_angle.rst", "_apidoc/pytransform3d.rotations.quaternion_from_matrix.rst", "_apidoc/pytransform3d.rotations.quaternion_gradient.rst", "_apidoc/pytransform3d.rotations.quaternion_integrate.rst", "_apidoc/pytransform3d.rotations.quaternion_slerp.rst", "_apidoc/pytransform3d.rotations.quaternion_wxyz_from_xyzw.rst", "_apidoc/pytransform3d.rotations.quaternion_xyzw_from_wxyz.rst", "_apidoc/pytransform3d.rotations.random_axis_angle.rst", "_apidoc/pytransform3d.rotations.random_compact_axis_angle.rst", "_apidoc/pytransform3d.rotations.random_quaternion.rst", "_apidoc/pytransform3d.rotations.random_vector.rst", "_apidoc/pytransform3d.rotations.rotor_apply.rst", "_apidoc/pytransform3d.rotations.rotor_from_plane_angle.rst", "_apidoc/pytransform3d.rotations.rotor_from_two_directions.rst", "_apidoc/pytransform3d.rotations.rotor_reverse.rst", "_apidoc/pytransform3d.rotations.rotor_slerp.rst", "_apidoc/pytransform3d.rotations.vector_projection.rst", "_apidoc/pytransform3d.rotations.wedge.rst", "_apidoc/pytransform3d.trajectories.batch_concatenate_dual_quaternions.rst", "_apidoc/pytransform3d.trajectories.batch_dq_conj.rst", "_apidoc/pytransform3d.trajectories.batch_dq_prod_vector.rst", "_apidoc/pytransform3d.trajectories.concat_many_to_one.rst", "_apidoc/pytransform3d.trajectories.concat_one_to_many.rst", "_apidoc/pytransform3d.trajectories.dual_quaternions_from_pqs.rst", "_apidoc/pytransform3d.trajectories.exponential_coordinates_from_transforms.rst", "_apidoc/pytransform3d.trajectories.invert_transforms.rst", "_apidoc/pytransform3d.trajectories.mirror_screw_axis_direction.rst", "_apidoc/pytransform3d.trajectories.plot_trajectory.rst", "_apidoc/pytransform3d.trajectories.pqs_from_dual_quaternions.rst", "_apidoc/pytransform3d.trajectories.pqs_from_transforms.rst", "_apidoc/pytransform3d.trajectories.transforms_from_exponential_coordinates.rst", "_apidoc/pytransform3d.trajectories.transforms_from_pqs.rst", "_apidoc/pytransform3d.transform_manager.TransformManager.rst", "_apidoc/pytransform3d.transformations.adjoint_from_transform.rst", "_apidoc/pytransform3d.transformations.assert_screw_parameters_equal.rst", "_apidoc/pytransform3d.transformations.assert_transform.rst", "_apidoc/pytransform3d.transformations.assert_unit_dual_quaternion.rst", "_apidoc/pytransform3d.transformations.assert_unit_dual_quaternion_equal.rst", "_apidoc/pytransform3d.transformations.check_dual_quaternion.rst", "_apidoc/pytransform3d.transformations.check_exponential_coordinates.rst", "_apidoc/pytransform3d.transformations.check_pq.rst", "_apidoc/pytransform3d.transformations.check_screw_axis.rst", "_apidoc/pytransform3d.transformations.check_screw_matrix.rst", "_apidoc/pytransform3d.transformations.check_screw_parameters.rst", "_apidoc/pytransform3d.transformations.check_transform.rst", "_apidoc/pytransform3d.transformations.check_transform_log.rst", "_apidoc/pytransform3d.transformations.concat.rst", "_apidoc/pytransform3d.transformations.concatenate_dual_quaternions.rst", "_apidoc/pytransform3d.transformations.dq_conj.rst", "_apidoc/pytransform3d.transformations.dq_prod_vector.rst", "_apidoc/pytransform3d.transformations.dq_q_conj.rst", "_apidoc/pytransform3d.transformations.dual_quaternion_from_pq.rst", "_apidoc/pytransform3d.transformations.dual_quaternion_from_screw_parameters.rst", "_apidoc/pytransform3d.transformations.dual_quaternion_from_transform.rst", "_apidoc/pytransform3d.transformations.dual_quaternion_power.rst", "_apidoc/pytransform3d.transformations.dual_quaternion_sclerp.rst", "_apidoc/pytransform3d.transformations.exponential_coordinates_from_screw_axis.rst", "_apidoc/pytransform3d.transformations.exponential_coordinates_from_transform.rst", "_apidoc/pytransform3d.transformations.exponential_coordinates_from_transform_log.rst", "_apidoc/pytransform3d.transformations.invert_transform.rst", "_apidoc/pytransform3d.transformations.norm_exponential_coordinates.rst", "_apidoc/pytransform3d.transformations.plot_screw.rst", "_apidoc/pytransform3d.transformations.plot_transform.rst", "_apidoc/pytransform3d.transformations.pq_from_dual_quaternion.rst", "_apidoc/pytransform3d.transformations.pq_from_transform.rst", "_apidoc/pytransform3d.transformations.random_screw_axis.rst", "_apidoc/pytransform3d.transformations.random_transform.rst", "_apidoc/pytransform3d.transformations.rotate_transform.rst", "_apidoc/pytransform3d.transformations.scale_transform.rst", "_apidoc/pytransform3d.transformations.screw_axis_from_exponential_coordinates.rst", "_apidoc/pytransform3d.transformations.screw_axis_from_screw_matrix.rst", "_apidoc/pytransform3d.transformations.screw_axis_from_screw_parameters.rst", "_apidoc/pytransform3d.transformations.screw_matrix_from_screw_axis.rst", "_apidoc/pytransform3d.transformations.screw_matrix_from_transform_log.rst", "_apidoc/pytransform3d.transformations.screw_parameters_from_dual_quaternion.rst", "_apidoc/pytransform3d.transformations.screw_parameters_from_screw_axis.rst", "_apidoc/pytransform3d.transformations.transform.rst", "_apidoc/pytransform3d.transformations.transform_from.rst", "_apidoc/pytransform3d.transformations.transform_from_dual_quaternion.rst", "_apidoc/pytransform3d.transformations.transform_from_exponential_coordinates.rst", "_apidoc/pytransform3d.transformations.transform_from_pq.rst", "_apidoc/pytransform3d.transformations.transform_from_transform_log.rst", "_apidoc/pytransform3d.transformations.transform_log_from_exponential_coordinates.rst", "_apidoc/pytransform3d.transformations.transform_log_from_screw_matrix.rst", "_apidoc/pytransform3d.transformations.transform_log_from_transform.rst", "_apidoc/pytransform3d.transformations.translate_transform.rst", "_apidoc/pytransform3d.transformations.vector_to_direction.rst", "_apidoc/pytransform3d.transformations.vector_to_point.rst", "_apidoc/pytransform3d.transformations.vectors_to_directions.rst", "_apidoc/pytransform3d.transformations.vectors_to_points.rst", "_apidoc/pytransform3d.urdf.Box.rst", "_apidoc/pytransform3d.urdf.Cylinder.rst", "_apidoc/pytransform3d.urdf.Geometry.rst", "_apidoc/pytransform3d.urdf.Joint.rst", "_apidoc/pytransform3d.urdf.Link.rst", "_apidoc/pytransform3d.urdf.Mesh.rst", "_apidoc/pytransform3d.urdf.Sphere.rst", "_apidoc/pytransform3d.urdf.UrdfTransformManager.rst", "_apidoc/pytransform3d.urdf.initialize_urdf_transform_manager.rst", "_apidoc/pytransform3d.urdf.parse_urdf.rst", "_apidoc/pytransform3d.visualizer.Artist.rst", "_apidoc/pytransform3d.visualizer.Box.rst", "_apidoc/pytransform3d.visualizer.Camera.rst", "_apidoc/pytransform3d.visualizer.Capsule.rst", "_apidoc/pytransform3d.visualizer.Cone.rst", "_apidoc/pytransform3d.visualizer.Cylinder.rst", "_apidoc/pytransform3d.visualizer.Ellipsoid.rst", "_apidoc/pytransform3d.visualizer.Figure.rst", "_apidoc/pytransform3d.visualizer.Frame.rst", "_apidoc/pytransform3d.visualizer.Graph.rst", "_apidoc/pytransform3d.visualizer.Line3D.rst", "_apidoc/pytransform3d.visualizer.Mesh.rst", "_apidoc/pytransform3d.visualizer.Plane.rst", "_apidoc/pytransform3d.visualizer.PointCollection3D.rst", "_apidoc/pytransform3d.visualizer.Sphere.rst", "_apidoc/pytransform3d.visualizer.Trajectory.rst", "_apidoc/pytransform3d.visualizer.Vector3D.rst", "_apidoc/pytransform3d.visualizer.figure.rst", "_auto_examples/animations/animate_angle_axis_interpolation.rst", "_auto_examples/animations/animate_quaternion_integration.rst", "_auto_examples/animations/animate_quaternion_interpolation.rst", "_auto_examples/animations/animate_rotation.rst", "_auto_examples/animations/animate_trajectory.rst", "_auto_examples/animations/sg_execution_times.rst", "_auto_examples/apps/app_transformation_editor.rst", "_auto_examples/index.rst", "_auto_examples/plots/plot_axis_angle.rst", "_auto_examples/plots/plot_axis_angle_from_two_vectors.rst", "_auto_examples/plots/plot_bivector.rst", "_auto_examples/plots/plot_box.rst", "_auto_examples/plots/plot_camera_3d.rst", "_auto_examples/plots/plot_camera_projection.rst", "_auto_examples/plots/plot_camera_trajectory.rst", "_auto_examples/plots/plot_camera_with_image.rst", "_auto_examples/plots/plot_collision_objects.rst", "_auto_examples/plots/plot_compare_rotations.rst", "_auto_examples/plots/plot_convention_rotation_global_local.rst", "_auto_examples/plots/plot_cylinder.rst", "_auto_examples/plots/plot_dual_quaternion_interpolation.rst", "_auto_examples/plots/plot_euler_angles.rst", "_auto_examples/plots/plot_frames.rst", "_auto_examples/plots/plot_matrix_from_two_vectors.rst", "_auto_examples/plots/plot_mesh.rst", "_auto_examples/plots/plot_pose_trajectory.rst", "_auto_examples/plots/plot_quaternion_integrate.rst", "_auto_examples/plots/plot_quaternion_slerp.rst", "_auto_examples/plots/plot_random_geometries.rst", "_auto_examples/plots/plot_robot.rst", "_auto_examples/plots/plot_rotate_cylinder.rst", "_auto_examples/plots/plot_screw.rst", "_auto_examples/plots/plot_sphere.rst", "_auto_examples/plots/plot_spherical_grid.rst", "_auto_examples/plots/plot_straight_line_path.rst", "_auto_examples/plots/plot_transform.rst", "_auto_examples/plots/plot_transform_concatenation.rst", "_auto_examples/plots/plot_transform_manager.rst", "_auto_examples/plots/plot_urdf.rst", "_auto_examples/plots/plot_urdf_with_meshes.rst", "_auto_examples/plots/plot_vector.rst", "_auto_examples/plots/sg_execution_times.rst", "_auto_examples/visualizations/render_urdf.rst", "_auto_examples/visualizations/sg_execution_times.rst", "_auto_examples/visualizations/vis_add_remove_artist.rst", "_auto_examples/visualizations/vis_basis.rst", "_auto_examples/visualizations/vis_box.rst", "_auto_examples/visualizations/vis_camera_3d.rst", "_auto_examples/visualizations/vis_capsule.rst", "_auto_examples/visualizations/vis_cone.rst", "_auto_examples/visualizations/vis_cylinder.rst", "_auto_examples/visualizations/vis_ee_wrench.rst", "_auto_examples/visualizations/vis_ellipsoid.rst", "_auto_examples/visualizations/vis_mesh.rst", "_auto_examples/visualizations/vis_moving_basis.rst", "_auto_examples/visualizations/vis_moving_cylinder_with_wrench.rst", "_auto_examples/visualizations/vis_moving_line.rst", "_auto_examples/visualizations/vis_moving_robot.rst", "_auto_examples/visualizations/vis_moving_trajectory.rst", "_auto_examples/visualizations/vis_moving_urdf_with_meshes.rst", "_auto_examples/visualizations/vis_plane.rst", "_auto_examples/visualizations/vis_scatter.rst", "_auto_examples/visualizations/vis_sphere.rst", "_auto_examples/visualizations/vis_urdf.rst", "_auto_examples/visualizations/vis_urdf_with_meshes.rst", "_auto_examples/visualizations/vis_vector.rst", "animations.rst", "api.rst", "camera.rst", "euler_angles.rst", "index.rst", "notation.rst", "rotations.rst", "transform_manager.rst", "transformation_ambiguities.rst", "transformation_modeling.rst", "transformations.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.active_matrices_from_angles", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.active_matrices_from_extrinsic_euler_angles", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.active_matrices_from_intrinsic_euler_angles", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.angles_between_vectors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.axis_angles_from_matrices", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.batch_concatenate_quaternions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.batch_q_conj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.batch_quaternion_wxyz_from_xyzw", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.batch_quaternion_xyzw_from_wxyz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.cross_product_matrices", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.matrices_from_compact_axis_angles", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.matrices_from_quaternions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.norm_vectors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.quaternion_slerp_batch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.quaternions_from_matrices", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.batch_rotations</span></code>.smooth_quaternion_trajectory", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.camera</span></code>.cam2sensor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.camera</span></code>.make_world_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.camera</span></code>.make_world_line", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.camera</span></code>.plot_camera", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.camera</span></code>.sensor2img", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.camera</span></code>.world2image", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.coordinates</span></code>.cartesian_from_cylindrical", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.coordinates</span></code>.cartesian_from_spherical", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.coordinates</span></code>.cylindrical_from_cartesian", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.coordinates</span></code>.cylindrical_from_spherical", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.coordinates</span></code>.spherical_from_cartesian", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.coordinates</span></code>.spherical_from_cylindrical", "pytransform3d.editor.TransformEditor", "pytransform3d.plot_utils.Arrow3D", "pytransform3d.plot_utils.Frame", "pytransform3d.plot_utils.LabeledFrame", "pytransform3d.plot_utils.Trajectory", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.make_3d_axis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_box", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_capsule", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_cone", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_cylinder", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_ellipsoid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_length_variable", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_mesh", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_sphere", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.plot_vector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.plot_utils</span></code>.remove_frame", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_xyx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_xyz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_xzx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_xzy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_yxy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_yxz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_yzx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_yzy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_zxy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_zxz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_zyx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_euler_zyz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_extrinsic_roll_pitch_yaw", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_xyx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_xyz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_xzx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_xzy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_yxy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_yxz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_yzx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_yzy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_zxy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_zxz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_zyx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.active_matrix_from_intrinsic_euler_zyz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.angle_between_vectors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.assert_axis_angle_equal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.assert_compact_axis_angle_equal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.assert_euler_xyz_equal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.assert_euler_zyx_equal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.assert_quaternion_equal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.assert_rotation_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.axis_angle_from_compact_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.axis_angle_from_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.axis_angle_from_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.axis_angle_from_two_directions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.axis_angle_slerp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.check_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.check_compact_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.check_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.check_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.check_quaternions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.check_rotor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.check_skew_symmetric_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.compact_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.compact_axis_angle_from_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.compact_axis_angle_from_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.concatenate_quaternions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.concatenate_rotors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.cross_product_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.euler_xyz_from_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.euler_zyx_from_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_xyx_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_xyz_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_xzx_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_xzy_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_yxy_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_yxz_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_yzx_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_yzy_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_zxy_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_zxz_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_zyx_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.extrinsic_euler_zyz_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.geometric_product", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_xyx_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_xyz_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_xzx_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_xzy_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_yxy_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_yxz_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_yzx_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_yzy_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_zxy_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_zxz_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_zyx_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.intrinsic_euler_zyz_from_active_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from_compact_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from_euler_xyz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from_euler_zyx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from_rotor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.matrix_from_two_vectors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.norm_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.norm_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.norm_compact_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.norm_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.norm_vector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.passive_matrix_from_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.perpendicular_to_vectors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.pick_closest_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.plane_basis_from_normal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.plane_normal_from_bivector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.plot_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.plot_basis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.plot_bivector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.q_conj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.q_prod_vector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_diff", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_dist", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_from_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_from_compact_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_from_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_gradient", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_integrate", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_slerp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_wxyz_from_xyzw", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.quaternion_xyzw_from_wxyz", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.random_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.random_compact_axis_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.random_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.random_vector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.rotor_apply", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.rotor_from_plane_angle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.rotor_from_two_directions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.rotor_reverse", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.rotor_slerp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.vector_projection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.rotations</span></code>.wedge", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.batch_concatenate_dual_quaternions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.batch_dq_conj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.batch_dq_prod_vector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.concat_many_to_one", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.concat_one_to_many", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.dual_quaternions_from_pqs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.exponential_coordinates_from_transforms", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.invert_transforms", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.mirror_screw_axis_direction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.plot_trajectory", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.pqs_from_dual_quaternions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.pqs_from_transforms", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.transforms_from_exponential_coordinates", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.trajectories</span></code>.transforms_from_pqs", "pytransform3d.transform_manager.TransformManager", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.adjoint_from_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.assert_screw_parameters_equal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.assert_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.assert_unit_dual_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.assert_unit_dual_quaternion_equal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.check_dual_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.check_exponential_coordinates", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.check_pq", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.check_screw_axis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.check_screw_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.check_screw_parameters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.check_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.check_transform_log", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.concat", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.concatenate_dual_quaternions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.dq_conj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.dq_prod_vector", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.dq_q_conj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.dual_quaternion_from_pq", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.dual_quaternion_from_screw_parameters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.dual_quaternion_from_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.dual_quaternion_power", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.dual_quaternion_sclerp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.exponential_coordinates_from_screw_axis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.exponential_coordinates_from_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.exponential_coordinates_from_transform_log", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.invert_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.norm_exponential_coordinates", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.plot_screw", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.plot_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.pq_from_dual_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.pq_from_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.random_screw_axis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.random_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.rotate_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.scale_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.screw_axis_from_exponential_coordinates", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.screw_axis_from_screw_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.screw_axis_from_screw_parameters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.screw_matrix_from_screw_axis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.screw_matrix_from_transform_log", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.screw_parameters_from_dual_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.screw_parameters_from_screw_axis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform_from", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform_from_dual_quaternion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform_from_exponential_coordinates", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform_from_pq", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform_from_transform_log", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform_log_from_exponential_coordinates", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform_log_from_screw_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.transform_log_from_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.translate_transform", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.vector_to_direction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.vector_to_point", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.vectors_to_directions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.transformations</span></code>.vectors_to_points", "pytransform3d.urdf.Box", "pytransform3d.urdf.Cylinder", "pytransform3d.urdf.Geometry", "pytransform3d.urdf.Joint", "pytransform3d.urdf.Link", "pytransform3d.urdf.Mesh", "pytransform3d.urdf.Sphere", "pytransform3d.urdf.UrdfTransformManager", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.urdf</span></code>.initialize_urdf_transform_manager", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.urdf</span></code>.parse_urdf", "pytransform3d.visualizer.Artist", "pytransform3d.visualizer.Box", "pytransform3d.visualizer.Camera", "pytransform3d.visualizer.Capsule", "pytransform3d.visualizer.Cone", "pytransform3d.visualizer.Cylinder", "pytransform3d.visualizer.Ellipsoid", "pytransform3d.visualizer.Figure", "pytransform3d.visualizer.Frame", "pytransform3d.visualizer.Graph", "pytransform3d.visualizer.Line3D", "pytransform3d.visualizer.Mesh", "pytransform3d.visualizer.Plane", "pytransform3d.visualizer.PointCollection3D", "pytransform3d.visualizer.Sphere", "pytransform3d.visualizer.Trajectory", "pytransform3d.visualizer.Vector3D", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytransform3d.visualizer</span></code>.figure", "Interpolate Between Axis-Angle Representations", "Quaternion Integration", "Interpolate Between Quaternion Orientations", "Animate Rotation", "Animate Trajectory", "Computation times", "Transformation Editor", "Examples", "Axis-Angle Representation of Rotation", "Axis-Angle Representation from Two Direction Vectors", "Plot Bivector", "Plot Box", "Camera Representation in 3D", "Camera Projection", "Camera Trajectory", "Camera Transform", "URDF with Collision Objects", "Compare Various Definitions of Rotations", "Convention for Rotation: Passive / Active, Extrinsic / Intrinsic", "Plot Transformed Cylinders", "Dual Quaternion Interpolation", "Euler Angles", "Plot with Respect to Different Reference Frames", "Construct Rotation Matrix from Two Vectors", "Plot Mesh", "Pose Trajectory", "Quaternion Integration", "Quaternion SLERP", "Plot Random Geometries", "Robot", "Rotate Cylinder", "Plot Transformation through Screw Motion", "Plot Sphere", "Spherical Grid", "Plot Straight Line Paths", "Plot Transformation", "Transform Concatenation", "Transformation Manager", "URDF Joints", "URDF with Meshes", "Plot Vector", "Computation times", "Render URDF", "Computation times", "Add and Remove Artist", "Visualize Coordinate Frame", "Plot Box", "Camera Representation in 3D", "Visualize Capsule", "Visualize Cone", "Visualize Transformed Cylinders", "Visualize Wrench", "Visualize Ellipsoid", "Visualize Mesh", "Animate Rotation", "Visualize Cylinder with Wrench", "Animate Line", "Animated Robot", "Animate Trajectory", "Animated URDF with Meshes", "Visualize Plane", "Scatter Plot", "Visualize Sphere", "URDF Joints", "URDF with Meshes", "Visualize Vector", "Animations", "API Documentation", "Camera", "Euler Angles", "pytransform3d", "Notation", "SO(3): 3D Rotations", "Managing Transformations", "Transformation Ambiguities and Conventions", "Modeling Transformations", "SE(3): 3D Transformations"], "terms": {"basi": [0, 1, 2, 30, 31, 44, 123, 130, 136, 139, 142, 143, 256, 257, 277, 288, 290, 302, 336, 338, 339, 341], "angl": [0, 1, 2, 3, 4, 10, 28, 29, 33, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 135, 136, 141, 142, 146, 148, 149, 151, 152, 156, 157, 161, 173, 175, 179, 183, 188, 201, 205, 206, 207, 209, 210, 211, 218, 223, 228, 231, 232, 242, 246, 256, 270, 272, 274, 284, 294, 298, 305, 308, 318, 321, 324, 326, 330, 333, 337, 338, 341, 343], "out": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 336], "none": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 122, 141, 142, 143, 176, 181, 210, 211, 239, 240, 241, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 269, 293, 297, 309, 318], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 343], "comput": [0, 1, 2, 3, 4, 10, 11, 14, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 77, 78, 79, 80, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 139, 146, 147, 148, 149, 150, 151, 160, 161, 173, 179, 181, 182, 200, 201, 202, 203, 205, 206, 207, 212, 213, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 261, 276, 280, 282, 290, 301, 322, 335, 339, 341, 343], "activ": [0, 1, 2, 10, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 78, 79, 89, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 136, 142, 148, 149, 150, 274, 308, 336, 338, 339, 343], "rotat": [0, 1, 2, 4, 5, 6, 10, 11, 13, 14, 15, 30, 32, 37, 42, 173, 175, 176, 179, 183, 188, 190, 191, 192, 201, 205, 206, 207, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 231, 232, 242, 246, 256, 257, 264, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 281, 282, 286, 287, 288, 292, 293, 294, 298, 301, 303, 304, 308, 310, 313, 317, 318, 325, 327, 333, 337, 338, 340, 343], "matric": [0, 1, 2, 4, 9, 10, 11, 14, 32, 173, 178, 179, 180, 181, 195, 246, 264, 301, 334, 336, 339, 341, 343], "from": [0, 1, 2, 3, 4, 7, 8, 10, 11, 14, 16, 18, 19, 20, 21, 28, 30, 31, 33, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 78, 79, 80, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 139, 141, 142, 143, 148, 149, 150, 154, 155, 156, 157, 159, 160, 161, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 184, 188, 193, 195, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 246, 247, 248, 251, 256, 257, 261, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 311, 313, 317, 318, 320, 321, 322, 324, 325, 326, 330, 331, 333, 334, 335, 338, 339, 340, 341, 342, 343], "about": [0, 44, 123, 136, 139, 210, 246, 270, 275, 276, 287, 288, 318, 321, 333, 336, 339, 341, 343], "vector": [0, 1, 2, 3, 5, 7, 8, 9, 12, 16, 17, 30, 31, 33, 42, 44, 70, 80, 89, 92, 93, 94, 109, 123, 124, 130, 132, 135, 136, 137, 139, 140, 141, 142, 143, 145, 154, 155, 159, 160, 162, 165, 166, 167, 169, 183, 192, 196, 198, 201, 210, 220, 223, 224, 235, 236, 237, 238, 256, 257, 265, 266, 267, 269, 274, 277, 288, 302, 308, 310, 318, 334, 336, 338, 339, 341, 343], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 279, 298, 309, 314, 318, 335, 339, 341, 343], "int": [0, 1, 2, 17, 18, 32, 33, 35, 36, 37, 38, 41, 44, 123, 136, 159, 176, 181, 246, 252, 253, 254, 255, 256, 263, 264, 266, 281], "0": [0, 1, 2, 13, 16, 17, 19, 21, 24, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 72, 77, 78, 79, 80, 81, 90, 91, 123, 130, 132, 133, 136, 141, 142, 143, 151, 152, 153, 156, 157, 158, 159, 164, 176, 181, 187, 188, 191, 204, 205, 209, 210, 211, 214, 215, 217, 218, 235, 237, 239, 240, 241, 244, 245, 246, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 340, 341, 343], "1": [0, 1, 2, 12, 13, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 54, 56, 71, 76, 81, 84, 123, 132, 135, 136, 141, 142, 143, 151, 152, 153, 156, 157, 159, 164, 176, 181, 182, 187, 204, 210, 211, 214, 215, 217, 236, 238, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 339, 340, 341, 343], "2": [0, 1, 2, 16, 17, 18, 19, 20, 21, 29, 44, 73, 74, 123, 136, 146, 147, 181, 187, 246, 251, 252, 254, 255, 256, 263, 267, 268, 269, 270, 271, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 305, 307, 309, 311, 312, 313, 314, 317, 318, 319, 321, 322, 324, 325, 326, 331, 333, 336, 339, 343], "The": [0, 6, 9, 13, 16, 17, 19, 29, 33, 37, 44, 76, 77, 78, 79, 80, 90, 91, 94, 109, 123, 130, 132, 133, 136, 139, 143, 144, 146, 153, 156, 157, 164, 168, 181, 182, 183, 187, 192, 194, 197, 199, 201, 210, 220, 223, 224, 246, 251, 252, 253, 254, 255, 256, 261, 263, 273, 274, 277, 281, 287, 290, 294, 298, 318, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343], "axi": [0, 1, 2, 4, 10, 17, 19, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 122, 123, 124, 125, 130, 132, 133, 135, 136, 139, 141, 142, 143, 146, 148, 149, 151, 152, 156, 157, 173, 175, 176, 179, 181, 183, 188, 190, 191, 192, 201, 205, 206, 207, 209, 210, 211, 214, 217, 218, 219, 220, 221, 222, 223, 224, 228, 231, 232, 242, 246, 252, 253, 254, 255, 256, 268, 270, 272, 274, 281, 284, 287, 290, 298, 305, 308, 309, 318, 321, 330, 333, 336, 337, 338, 341, 343], "x": [0, 1, 2, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 22, 23, 24, 26, 28, 29, 33, 38, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 136, 138, 139, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 166, 172, 176, 177, 178, 180, 189, 200, 212, 213, 217, 229, 235, 236, 237, 238, 255, 256, 267, 268, 269, 270, 271, 280, 285, 290, 309, 321, 333, 335, 336, 338, 339, 341, 343], "y": [0, 1, 2, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 22, 23, 24, 26, 28, 29, 38, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 136, 138, 139, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 166, 172, 176, 177, 178, 180, 189, 200, 212, 213, 217, 229, 235, 236, 237, 238, 255, 256, 267, 268, 269, 270, 271, 280, 285, 290, 294, 295, 309, 333, 335, 336, 339, 341, 343], "z": [0, 1, 2, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 35, 38, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 91, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 136, 138, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 166, 172, 176, 177, 178, 180, 189, 200, 212, 213, 217, 229, 235, 236, 237, 238, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 280, 285, 290, 309, 333, 336, 339, 341, 343], "arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 246, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 276, 277, 278, 279, 280, 281, 282, 284, 287, 288, 292, 293, 297, 298, 301, 303, 304, 307, 309, 314, 318, 322, 325, 332, 334, 335, 338, 339, 340, 341, 343], "like": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 242, 246, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 318, 340, 342, 343], "shape": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 246, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 295, 309, 318, 323, 328, 338, 339, 343], "3": [0, 1, 2, 4, 9, 10, 11, 14, 16, 18, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 83, 84, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 139, 140, 141, 142, 143, 145, 147, 150, 151, 152, 157, 159, 160, 161, 162, 165, 166, 169, 173, 179, 181, 183, 188, 190, 192, 198, 201, 205, 206, 207, 209, 210, 214, 216, 218, 219, 220, 221, 223, 224, 226, 228, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 307, 309, 312, 313, 316, 317, 318, 320, 321, 322, 323, 325, 327, 328, 333, 334, 337, 338, 340], "option": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 70, 78, 84, 85, 86, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 141, 142, 143, 150, 151, 152, 153, 156, 157, 158, 159, 164, 176, 180, 181, 182, 187, 191, 193, 194, 195, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 225, 226, 228, 233, 234, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 309, 318, 334], "default": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 70, 78, 84, 85, 86, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 141, 142, 143, 150, 151, 152, 153, 156, 157, 158, 159, 164, 176, 180, 181, 182, 187, 191, 193, 194, 195, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 225, 226, 228, 233, 234, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 279, 309, 314, 318, 341], "new": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 19, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 141, 142, 143, 176, 181, 210, 211, 246, 256, 266, 267, 268, 269, 322, 336, 338, 339, 341, 342], "output": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 181, 246], "which": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 54, 56, 89, 138, 147, 165, 170, 171, 181, 195, 235, 236, 237, 238, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 280, 282, 298, 318, 335, 336, 338, 339, 340, 341, 343], "we": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 19, 43, 71, 72, 73, 74, 77, 78, 79, 84, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 138, 142, 145, 147, 148, 149, 150, 151, 167, 168, 170, 171, 175, 181, 182, 191, 193, 194, 195, 196, 197, 199, 206, 208, 211, 213, 216, 217, 224, 225, 226, 233, 234, 235, 236, 237, 238, 242, 243, 246, 248, 251, 256, 261, 267, 269, 275, 276, 280, 282, 285, 288, 289, 290, 296, 297, 298, 300, 301, 302, 303, 304, 309, 318, 322, 324, 335, 336, 338, 339, 340, 341, 342, 343], "write": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 339], "result": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 16, 28, 29, 92, 93, 124, 125, 128, 167, 181, 196, 204, 267, 269, 276, 294, 336, 339, 343], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 297, 301, 309, 321, 322, 323, 324, 325, 326, 333], "rs": [0, 1, 2, 4, 10, 11, 14, 267, 269], "basis1": [1, 2], "basis2": [1, 2], "basis3": [1, 2], "e": [1, 2, 9, 19, 29, 39, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 89, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 141, 142, 176, 181, 210, 211, 246, 252, 255, 256, 263, 284, 341], "extrins": [1, 5, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 136, 142, 167, 170, 171, 195, 196, 274, 288, 308, 335, 336, 339, 342], "euler": [1, 2, 43, 45, 46, 47, 49, 52, 54, 56, 58, 60, 62, 65, 67, 69, 73, 74, 95, 96, 97, 99, 101, 104, 106, 108, 110, 112, 114, 117, 119, 121, 141, 142, 274, 284, 308, 334, 337, 338, 341], "first": [1, 2, 5, 80, 92, 130, 146, 147, 151, 173, 175, 179, 187, 188, 190, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 256, 290, 336, 339, 341], "correspond": [1, 2, 54, 56, 130, 140, 143, 151, 182, 199, 252, 254, 256, 276, 277, 280, 287, 290, 302, 335, 336, 338, 339, 341], "second": [1, 2, 5, 80, 92, 130, 146, 147, 187, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 339, 341], "third": [1, 2, 130], "intrins": [2, 19, 44, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 95, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 136, 142, 251, 256, 274, 308, 335, 336, 339], "A": [3, 4, 10, 29, 30, 31, 32, 35, 37, 38, 109, 151, 170, 171, 174, 181, 182, 184, 187, 190, 191, 193, 195, 202, 206, 208, 211, 213, 215, 216, 217, 219, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 243, 246, 252, 254, 256, 257, 259, 261, 262, 264, 265, 289, 298, 303, 307, 311, 338, 339, 340, 341, 342, 343], "b": [3, 30, 31, 38, 70, 80, 109, 130, 137, 140, 143, 161, 165, 166, 170, 171, 174, 181, 182, 184, 193, 195, 202, 206, 208, 211, 213, 215, 216, 217, 225, 226, 227, 228, 229, 230, 233, 234, 243, 256, 257, 267, 268, 269, 276, 277, 278, 287, 289, 290, 295, 338, 339, 342, 343], "between": [3, 13, 43, 70, 81, 124, 128, 135, 147, 148, 151, 152, 153, 164, 181, 204, 246, 256, 258, 259, 262, 264, 265, 272, 274, 287, 300, 334, 339, 341, 343], "two": [3, 5, 15, 29, 33, 42, 70, 71, 72, 73, 74, 75, 76, 78, 80, 90, 92, 93, 109, 124, 130, 137, 138, 139, 141, 142, 143, 147, 159, 166, 167, 183, 196, 199, 267, 269, 274, 277, 287, 289, 308, 334, 339, 340, 341, 343], "n": [3, 12, 29, 30, 31, 32, 70, 131, 135, 140, 156, 157, 159, 181, 214, 215, 246, 309], "nd": [3, 12, 70, 135, 159, 334], "pair": [3, 181, 242, 246, 336], "trace": 4, "compact": [4, 10, 77, 83, 89, 90, 91, 125, 133, 149, 151, 152, 157, 338, 339, 343], "represent": [4, 10, 19, 33, 42, 70, 71, 72, 77, 80, 81, 82, 83, 85, 86, 89, 122, 124, 132, 133, 135, 141, 142, 151, 152, 156, 175, 182, 187, 209, 211, 220, 229, 256, 258, 272, 274, 308, 310, 318, 337, 339, 341, 343], "thi": [4, 6, 10, 15, 19, 28, 29, 40, 54, 56, 71, 72, 78, 79, 80, 90, 124, 125, 128, 139, 144, 148, 151, 175, 181, 183, 188, 199, 204, 205, 209, 217, 218, 242, 243, 246, 248, 251, 256, 276, 279, 281, 283, 287, 289, 291, 294, 297, 301, 303, 304, 305, 306, 307, 309, 314, 318, 320, 324, 326, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "call": [4, 10, 78, 79, 90, 124, 125, 148, 187, 256, 336, 339, 341, 343], "logarithm": [4, 78, 79, 90, 91, 194, 206, 207, 222, 230, 231, 232, 233, 337, 338, 339], "map": [4, 10, 78, 79, 90, 91, 124, 125, 148, 149, 182, 206, 228, 338, 339, 342], "If": [4, 5, 10, 16, 19, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 82, 83, 84, 85, 86, 87, 88, 122, 123, 130, 136, 141, 142, 143, 151, 176, 181, 187, 188, 189, 190, 191, 192, 193, 194, 204, 210, 211, 225, 246, 248, 261, 282, 336, 337, 339, 341, 342], "been": [4, 10, 54, 56, 181, 246, 256, 258, 281, 334], "precomput": [4, 10], "you": [4, 10, 151, 181, 188, 204, 205, 209, 218, 256, 294, 309, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "can": [4, 5, 10, 40, 92, 93, 130, 143, 151, 167, 181, 182, 183, 196, 224, 235, 236, 237, 238, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 273, 274, 275, 276, 277, 280, 282, 288, 294, 298, 300, 302, 303, 309, 311, 318, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "pass": [4, 10, 30, 31, 32, 71, 72, 73, 74, 75, 76, 151, 183, 184, 185, 186, 256, 335, 343], "them": [4, 10, 73, 74, 130, 181, 246, 283, 309, 339, 341, 342, 343], "here": [4, 10, 29, 168, 197, 199, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343], "4": [4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 21, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 54, 56, 71, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 91, 92, 93, 109, 122, 124, 128, 129, 132, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 170, 171, 173, 174, 178, 179, 180, 181, 182, 184, 191, 193, 194, 195, 202, 206, 207, 208, 210, 211, 213, 215, 216, 217, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 246, 250, 251, 252, 253, 254, 255, 256, 257, 260, 263, 264, 268, 270, 271, 277, 282, 283, 285, 286, 287, 291, 294, 295, 297, 298, 299, 301, 303, 304, 309, 315, 316, 317, 318, 319, 320, 321, 322, 325, 327, 329, 332, 333, 337, 338, 339, 340, 343], "ax": [4, 10, 19, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 141, 142, 143, 176, 181, 210, 211, 239, 240, 241, 244, 245, 246, 256, 267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 333, 339, 340, 341], "q1": [5, 15, 75, 92, 146, 147, 183], "q2": [5, 15, 75, 92, 146, 147, 183], "concaten": [5, 92, 93, 124, 167, 170, 171, 181, 195, 196, 211, 225, 226, 274, 285, 308, 336, 339, 341, 342], "batch": [5, 13, 167, 301, 334], "quaternion": [5, 6, 7, 8, 11, 13, 14, 15, 32, 75, 79, 85, 86, 91, 92, 122, 124, 128, 138, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 167, 168, 169, 172, 176, 177, 178, 179, 180, 185, 186, 187, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 211, 212, 213, 215, 218, 223, 227, 228, 229, 256, 272, 274, 308, 337, 338, 341], "us": [5, 29, 92, 139, 145, 147, 168, 170, 171, 197, 199, 273, 274, 281, 288, 289, 291, 294, 304, 306, 309, 318, 320, 326, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343], "hamilton": [5, 92, 145, 339, 341], "s": [5, 19, 28, 30, 31, 32, 40, 42, 92, 131, 139, 141, 142, 145, 147, 151, 173, 176, 179, 181, 188, 190, 191, 192, 194, 205, 206, 207, 209, 210, 211, 218, 222, 228, 230, 231, 232, 233, 246, 252, 253, 256, 257, 258, 260, 261, 262, 264, 270, 271, 273, 276, 279, 281, 282, 283, 286, 287, 291, 292, 293, 294, 295, 297, 298, 299, 301, 304, 305, 306, 307, 309, 311, 314, 318, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 333, 334, 338, 339, 340, 341, 343], "multipl": [5, 29, 30, 31, 32, 92, 145, 170, 171, 275, 301, 338, 339, 341, 342, 343], "suppos": [5, 92, 93, 167, 181, 196, 339, 340, 341], "want": [5, 92, 93, 138, 167, 188, 196, 204, 205, 209, 218, 336, 338, 339, 340, 341, 342, 343], "appli": [5, 92, 93, 145, 167, 169, 196, 198, 199, 235, 236, 237, 238, 297, 322, 339, 341, 342], "given": [5, 19, 29, 92, 93, 122, 130, 167, 181, 196, 235, 236, 237, 238, 243, 246, 248, 251, 256, 259, 276, 309, 335, 339], "v": [5, 9, 12, 88, 92, 93, 94, 135, 145, 159, 160, 167, 169, 182, 190, 191, 196, 198, 214, 235, 236, 237, 238, 341, 343], "either": [5, 75, 92, 93, 167, 181, 186, 196, 242, 246, 261, 267, 269, 336, 339, 341, 343], "q12": [5, 92], "repres": [5, 6, 11, 13, 14, 15, 29, 30, 31, 32, 75, 79, 85, 86, 89, 91, 92, 122, 128, 132, 133, 138, 143, 144, 145, 148, 149, 150, 151, 152, 153, 158, 161, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 212, 218, 219, 221, 222, 223, 227, 232, 235, 236, 237, 238, 246, 256, 259, 262, 264, 265, 267, 269, 275, 276, 277, 288, 298, 334, 336, 338, 339, 341, 343], "rais": [5, 16, 19, 37, 44, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 136, 142, 150, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256, 261], "valueerror": [5, 16, 19, 37, 44, 78, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 136, 142, 150, 176, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256, 261], "input": [5, 16, 19, 82, 83, 84, 85, 86, 87, 88, 187, 188, 189, 190, 191, 192, 193, 194, 256], "dimens": [5, 34, 35, 36, 37, 38, 41, 89, 225, 250, 256, 334, 339], "ar": [5, 15, 16, 19, 28, 29, 30, 31, 32, 71, 72, 73, 74, 75, 78, 86, 90, 130, 138, 139, 151, 168, 171, 173, 179, 181, 183, 186, 187, 188, 190, 194, 195, 197, 199, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 225, 228, 231, 246, 248, 251, 252, 255, 256, 258, 263, 267, 269, 276, 294, 300, 333, 335, 336, 338, 339, 340, 341, 342, 343], "incorrect": [5, 225], "q": [6, 11, 13, 14, 15, 22, 23, 24, 25, 26, 27, 79, 85, 86, 91, 122, 128, 138, 144, 145, 148, 149, 150, 151, 152, 153, 158, 187, 192, 201, 203, 210, 220, 223, 224, 256, 268, 269, 284, 293, 298, 318, 338, 339, 343], "conjug": [6, 144, 168, 197, 199, 339], "unit": [6, 10, 11, 12, 13, 14, 15, 19, 33, 75, 79, 85, 86, 87, 91, 122, 128, 135, 139, 140, 144, 145, 148, 149, 150, 151, 152, 153, 158, 161, 162, 169, 183, 185, 186, 187, 192, 197, 198, 199, 200, 201, 202, 203, 204, 212, 223, 224, 227, 251, 256, 282, 300, 302, 337, 339, 341, 343], "invert": [6, 144, 163, 174, 175, 181, 182, 183, 208], "often": [6, 144, 336, 342], "denot": [6, 144], "w": [6, 7, 8, 9, 11, 13, 14, 15, 75, 79, 85, 86, 91, 94, 122, 128, 138, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 169, 176, 198, 256, 339, 341, 343], "q_c": [6, 144], "q_xyzw": [7, 8, 154, 155], "convert": [7, 8, 22, 23, 24, 25, 26, 27, 140, 154, 155, 168, 175, 197, 199, 235, 236, 237, 238, 300], "convent": [7, 8, 44, 136, 142, 154, 155, 170, 171, 195, 274, 288, 308, 337, 338, 339, 342], "scalar": [7, 8, 15, 29, 30, 31, 32, 109, 154, 155, 188, 194, 203, 339, 341, 343], "part": [7, 8, 154, 155, 187, 190, 339, 341, 343], "after": [7, 8, 151, 152, 154, 155, 246, 276, 339, 342], "q_wxyz": [7, 8, 154, 155], "befor": [7, 8, 11, 13, 29, 71, 72, 153, 154, 155, 164, 176, 180, 335], "gener": [9, 17, 18, 33, 94, 156, 157, 158, 159, 204, 214, 215, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 341, 343], "cross": [9, 88, 94, 130, 191, 219, 221, 222, 232, 290, 309, 339, 343], "product": [9, 88, 94, 109, 130, 143, 166, 167, 188, 191, 194, 196, 219, 221, 222, 232, 277, 290, 339, 343], "matrix": [9, 10, 19, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 78, 84, 88, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 139, 142, 150, 159, 160, 181, 182, 184, 191, 193, 194, 195, 199, 202, 206, 207, 208, 211, 213, 216, 217, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243, 246, 248, 251, 256, 274, 308, 309, 335, 337, 338, 341, 342], "boldsymbol": [9, 76, 89, 94, 182, 190, 191, 192, 338, 339, 341, 342, 343], "satisfi": [9, 94, 336], "equat": [9, 94, 339, 342], "time": [9, 94, 151, 152, 191, 194, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 339, 343], "It": [9, 19, 37, 40, 94, 168, 181, 197, 199, 251, 256, 279, 314, 339, 340, 341, 343], "skew": [9, 88, 94], "symmetr": [9, 88, 94, 109], "antisymmetr": [9, 94, 109], "i": [9, 19, 21, 76, 94, 142, 181, 210, 211, 246, 250, 251, 252, 255, 256, 263, 268, 271, 281, 285, 294, 305, 309, 318, 324, 325, 330, 337, 339, 343], "t": [9, 13, 76, 80, 81, 88, 94, 153, 164, 182, 191, 194, 203, 204, 267, 269, 271, 281, 287, 293, 294, 301, 309, 318, 323, 325, 338, 339, 341, 342, 343], "3d": [9, 16, 19, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 94, 137, 139, 141, 142, 143, 145, 169, 176, 181, 198, 210, 211, 229, 235, 236, 237, 238, 246, 256, 267, 268, 269, 270, 271, 280, 285, 307, 308, 310, 333, 334, 335, 336, 337], "v_cross_product_matric": 9, "exponenti": [10, 124, 125, 148, 149, 173, 175, 179, 188, 205, 206, 207, 209, 218, 228, 231, 287, 301, 322, 337, 338, 339], "rodrigu": [10, 124, 125, 339], "formula": [10, 124, 125, 339], "typic": [10, 124, 125, 128, 336, 339, 341, 343], "an": [10, 29, 32, 42, 71, 72, 73, 74, 75, 76, 124, 125, 128, 139, 159, 176, 181, 183, 184, 185, 186, 191, 209, 219, 221, 222, 232, 246, 256, 267, 281, 291, 298, 320, 335, 336, 338, 339, 340, 341, 343], "have": [10, 17, 80, 151, 175, 182, 183, 185, 204, 246, 256, 303, 318, 334, 335, 336, 339, 340, 341, 343], "normalize_quaternion": [11, 176, 180, 292], "true": [11, 19, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 78, 84, 85, 86, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 150, 176, 180, 181, 182, 187, 191, 193, 194, 195, 206, 207, 208, 211, 213, 216, 217, 225, 226, 228, 233, 234, 239, 240, 241, 244, 245, 246, 248, 251, 256, 278, 287, 299, 305, 306, 309, 311, 318, 321, 322, 323, 324, 325, 326, 330, 331, 340], "bool": [11, 13, 19, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 70, 78, 84, 85, 86, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 150, 153, 164, 176, 180, 181, 182, 187, 191, 193, 194, 195, 206, 207, 208, 211, 213, 216, 217, 225, 226, 228, 233, 234, 246, 248, 251, 256, 258, 266, 309], "normal": [11, 12, 71, 72, 80, 85, 86, 130, 131, 132, 133, 134, 135, 139, 140, 143, 156, 157, 159, 161, 162, 176, 180, 187, 209, 214, 256, 261, 277, 290, 327], "convers": [11, 180, 287, 301, 339, 343], "v_unit": 12, "norm": [12, 87, 89, 135, 138, 185, 269, 287, 309, 339], "zero": [12, 130, 135, 191, 192, 219, 221, 222, 232, 268, 271, 276, 294, 297, 313, 318, 322, 323, 325, 343], "start": [13, 15, 18, 28, 39, 42, 81, 153, 164, 204, 246, 248, 252, 256, 265, 267, 268, 269, 276, 278, 301, 307, 309, 332], "end": [13, 18, 39, 81, 153, 164, 181, 190, 191, 204, 246, 267, 269, 278, 304, 309, 335, 339, 340, 341, 343], "shortest_path": [13, 153, 164], "fals": [13, 39, 40, 70, 153, 164, 246, 256, 258, 266, 267, 268, 269, 270, 271, 278, 286, 292, 294, 295, 297, 299, 301, 309, 311, 331, 333], "spheric": [13, 23, 25, 26, 27, 33, 81, 153, 164, 267, 269, 274, 294, 308, 318], "linear": [13, 81, 153, 164, 204, 267, 269, 287, 294, 301, 339, 341], "interpol": [13, 15, 32, 70, 81, 124, 128, 135, 148, 153, 164, 179, 195, 202, 204, 206, 208, 211, 215, 218, 227, 228, 272, 274, 294, 308, 339, 343], "step": [13, 35, 36, 37, 38, 41, 151, 152, 176, 178, 256, 267, 268, 269, 270, 271, 275, 297, 321, 322, 323, 324, 325, 326, 333], "n_step": [13, 15, 32, 35, 36, 37, 38, 41, 86, 151, 152, 175, 176, 178, 256, 264, 287, 292, 299], "goal": [13, 81, 204, 267, 269, 301], "must": [13, 37, 130, 181, 246, 291, 306, 320, 326, 331, 339, 340], "interv": [13, 73, 74, 151, 152, 156, 157, 267, 268, 269, 270, 271, 333, 336], "resolv": [13, 138, 153, 164, 209, 246, 248], "sign": [13, 150, 153, 164], "ambigu": [13, 138, 150, 153, 164, 209, 336, 337, 338, 343], "find": [13, 153, 164, 336, 338, 341, 343], "shortest": [13, 153, 164, 181], "path": [13, 29, 30, 31, 32, 33, 40, 43, 44, 153, 164, 179, 181, 206, 226, 246, 248, 256, 260, 274, 281, 291, 296, 298, 306, 308, 309, 311, 318, 320, 324, 326, 331, 340], "pick": [13, 138, 139, 153, 164], "close": [13, 19, 78, 84, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 138, 142, 150, 153, 164, 181, 182, 191, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256], "pose": [13, 32, 40, 172, 173, 176, 177, 178, 179, 180, 204, 243, 252, 253, 254, 255, 256, 264, 274, 287, 308, 309, 322, 334, 335, 341, 343], "trajectori": [13, 15, 19, 136, 154, 195, 211, 226, 249, 256, 266, 272, 274, 287, 294, 301, 308, 310, 333, 335], "start_component_posit": 15, "smooth": [15, 309], "same": [15, 19, 84, 130, 138, 150, 151, 175, 181, 246, 251, 256, 290, 294, 300, 336, 338, 339, 340, 341, 343], "cannot": [15, 181, 246, 339], "well": [15, 143, 277, 336, 339, 341], "function": [15, 19, 29, 30, 31, 32, 40, 42, 54, 56, 71, 72, 139, 141, 142, 151, 176, 181, 183, 199, 210, 211, 246, 256, 309, 339, 341, 342], "guarante": 15, "success": [15, 267, 269], "closer": [15, 339], "than": [15, 37, 80, 156, 157, 181, 196, 246, 334, 339, 343], "str": [15, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 181, 242, 243, 246, 247, 248, 256, 257, 258, 260, 266, 309], "ha": [15, 19, 54, 56, 181, 187, 246, 251, 256, 258, 281, 318, 339], "compon": [15, 143, 156, 157, 159, 173, 179, 181, 188, 190, 205, 206, 207, 209, 214, 215, 217, 218, 219, 220, 221, 224, 228, 231, 235, 236, 237, 238, 246, 277, 318, 335, 339, 343], "posit": [15, 19, 28, 29, 33, 43, 71, 72, 73, 74, 75, 76, 81, 151, 153, 164, 172, 176, 177, 178, 180, 183, 184, 185, 186, 189, 200, 204, 209, 212, 213, 229, 236, 238, 246, 251, 252, 254, 256, 298, 303, 335, 338, 340, 341], "allow": [15, 246, 256, 266, 336, 339], "valu": [15, 19, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 181, 190, 205, 214, 218, 219, 220, 221, 224, 246, 251, 256, 259, 262, 264, 265, 294, 335, 339, 343], "p_cam": 16, "focal_length": [16, 21, 280, 282], "kappa": [16, 21, 282], "project": [16, 17, 20, 21, 29, 143, 165, 211, 267, 268, 269, 270, 271, 274, 277, 285, 308, 333, 335, 339], "point": [16, 17, 18, 20, 21, 29, 39, 130, 183, 192, 201, 210, 220, 223, 224, 225, 236, 238, 256, 259, 261, 262, 280, 282, 290, 298, 300, 303, 318, 327, 328, 335, 338, 339, 341, 342, 343], "coordin": [16, 17, 18, 19, 20, 21, 29, 173, 175, 179, 181, 188, 205, 206, 207, 209, 218, 228, 231, 235, 236, 237, 238, 246, 256, 257, 258, 266, 274, 276, 280, 282, 287, 298, 300, 301, 302, 310, 322, 335, 337, 338, 339], "system": [16, 20, 21, 181, 246, 280, 334, 338], "sensor": [16, 19, 20, 21, 251, 256, 280, 318, 335, 341], "plane": [16, 17, 19, 20, 130, 135, 139, 140, 143, 161, 166, 251, 256, 266, 274, 277, 279, 290, 310, 314, 335, 339], "n_point": [16, 18, 20, 21, 225, 238, 256, 259, 262], "float": [16, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 70, 81, 84, 88, 123, 131, 136, 141, 142, 143, 147, 151, 152, 153, 161, 164, 176, 181, 183, 191, 192, 194, 201, 203, 204, 205, 210, 211, 217, 218, 220, 223, 224, 232, 242, 243, 246, 251, 252, 253, 254, 256, 257, 258, 261, 262, 263, 264, 267, 269, 271, 295, 309, 318, 325], "focal": [16, 19, 21, 251, 256, 335], "length": [16, 19, 21, 29, 30, 31, 32, 37, 39, 71, 132, 139, 156, 157, 240, 251, 254, 256, 257, 283, 286, 295, 297, 298, 309, 317, 322, 335, 336], "distort": [16, 21], "p_sensor": [16, 20], "behind": 16, "nan": 16, "valid": [16, 19, 78, 82, 83, 84, 85, 86, 87, 88, 181, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 216, 228, 234, 246, 248, 339], "n_line": 17, "11": [17, 280, 285, 300, 339, 343], "n_points_per_lin": [17, 280, 282], "51": 17, "xlim": [17, 28, 285], "5": [17, 29, 33, 54, 56, 267, 269, 270, 271, 273, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 307, 309, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 340, 343], "ylim": [17, 28, 285], "grid": [17, 23, 33, 274, 280, 282, 308, 335], "world": [17, 18, 19, 21, 251, 256, 273, 282, 289, 335, 341], "frame": [17, 18, 19, 21, 28, 31, 32, 33, 35, 38, 43, 142, 170, 171, 174, 176, 181, 182, 184, 193, 195, 202, 206, 208, 211, 213, 215, 216, 217, 225, 226, 227, 228, 229, 230, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 251, 256, 258, 264, 266, 267, 268, 269, 270, 274, 275, 276, 280, 282, 298, 302, 303, 305, 308, 309, 310, 318, 321, 323, 330, 333, 336, 338, 339, 340, 342, 343], "form": [17, 109, 130, 139, 143, 166, 182, 256, 261, 277, 290, 327, 339, 343], "all": [17, 28, 181, 246, 256, 258, 274, 285, 289, 309, 334, 336, 338, 339, 340, 341, 343], "number": [17, 18, 32, 33, 35, 36, 37, 38, 41, 156, 157, 158, 159, 168, 176, 181, 197, 214, 215, 246, 256, 264, 336, 339], "line": [17, 18, 30, 31, 32, 33, 35, 37, 39, 43, 44, 146, 179, 181, 206, 210, 226, 246, 252, 254, 255, 256, 257, 258, 259, 263, 266, 274, 276, 287, 307, 308, 310, 318], "per": [17, 34, 250, 256, 259], "tupl": [17, 28, 71, 72, 73, 74, 75, 76, 183, 184, 185, 186, 243], "rang": [17, 28, 268, 281, 285, 293, 305, 309, 323, 324, 328, 330], "world_grid": [17, 282], "homogen": [17, 32, 173, 178, 179, 180, 181, 184, 235, 236, 237, 238, 246, 264, 343], "transform": [17, 19, 21, 28, 29, 30, 31, 32, 33, 37, 38, 43, 45, 57, 59, 80, 89, 124, 156, 158, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 242, 243, 246, 247, 248, 251, 256, 257, 266, 271, 274, 276, 278, 279, 280, 281, 287, 289, 291, 295, 297, 299, 301, 308, 309, 310, 313, 314, 318, 322, 325, 335, 336, 337, 339], "p1": 18, "p2": 18, "sampl": [18, 156, 157, 159, 214, 215], "m": [19, 29, 30, 31, 32, 33, 251, 256, 279, 282, 295, 300, 302, 314, 338, 341], "cam2world": [19, 21, 251, 256, 279, 282, 314], "virtual_image_dist": [19, 251, 256, 279, 281, 282, 314], "sensor_s": [19, 20, 21, 251, 256, 279, 280, 281, 282, 314], "1920": [19, 251, 256, 266, 281], "1080": [19, 251, 256, 266], "ax_": [19, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 141, 142, 143, 176, 181, 210, 211, 246, 276, 278, 284, 287, 288, 294, 296, 297, 299, 300, 302, 307], "strict_check": [19, 78, 84, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 150, 181, 182, 191, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256], "kwarg": [19, 29, 30, 31, 32, 39, 42, 71, 72, 73, 74, 75, 76, 141, 142, 176, 181, 183, 184, 185, 186, 210, 211, 246, 249], "plot": [19, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 57, 124, 141, 142, 143, 156, 176, 179, 181, 195, 206, 210, 211, 215, 220, 226, 228, 234, 239, 240, 241, 244, 245, 246, 256, 264, 266, 267, 268, 269, 274, 292, 297, 300, 308, 310, 317, 318, 323, 339, 341], "inspir": [19, 256, 279, 314], "blender": [19, 256, 279, 314, 341], "visual": [19, 70, 124, 135, 137, 156, 165, 181, 182, 192, 218, 224, 225, 226, 228, 234, 235, 236, 238, 243, 246, 277, 279, 296, 298, 309, 310, 311, 313, 314, 321, 323, 324, 325, 326, 328, 330, 331, 335, 339, 340], "show": [19, 28, 40, 143, 256, 258, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 340], "center": [19, 20, 21, 34, 35, 36, 37, 39, 41, 250, 251, 252, 253, 254, 255, 256, 260, 263, 279, 281, 297, 309, 314, 318, 335, 341], "virtual": [19, 251, 256, 279, 314, 335], "imag": [19, 20, 21, 251, 256, 279, 280, 282, 314, 333, 335], "top": [19, 43, 256, 275, 279, 285, 314, 335], "matplotlib": [19, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 141, 142, 143, 176, 181, 210, 211, 246, 267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 333, 340], "creat": [19, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 141, 142, 143, 176, 181, 210, 211, 246, 256, 266], "contain": [19, 109, 142, 176, 235, 236, 237, 238, 251, 256, 334, 337, 343], "diagon": [19, 251, 256], "last": [19, 151, 173, 179, 188, 190, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 235, 236, 237, 238, 251, 256, 334, 336, 339, 341, 343], "column": [19, 139, 142, 251, 256, 339, 341, 343], "doe": [19, 151, 176, 185, 204, 251, 256, 307, 341], "matter": [19, 251, 256, 336], "whether": [19, 30, 31, 84, 88, 138, 251, 256, 336, 341], "meter": [19, 251, 256, 335], "pixel": [19, 251, 256, 280, 335], "long": [19, 251, 256], "size": [19, 20, 21, 34, 239, 250, 251, 256, 278, 283, 295, 309, 313, 335], "assum": [19, 71, 72, 77, 78, 79, 89, 90, 91, 130, 148, 149, 150, 251, 256, 318], "distanc": [19, 22, 23, 24, 25, 26, 27, 147, 251, 256, 261, 279, 300, 314], "pinhol": [19, 251, 256, 335], "displai": [19, 30, 31, 32, 143, 246, 251, 256, 258, 277, 283, 302, 305, 309, 330, 335, 340], "consist": [19, 109, 181, 190, 191, 219, 221, 222, 232, 246, 251, 256, 259, 339, 343], "width": [19, 20, 21, 28, 251, 256, 266, 321, 335], "height": [19, 20, 21, 22, 24, 25, 27, 28, 29, 35, 36, 251, 252, 253, 254, 256, 266, 295, 315, 316, 321, 335], "scale": [19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 141, 142, 143, 176, 181, 210, 211, 217, 244, 246, 256, 258, 260, 261, 262, 264, 301, 307, 309, 318], "numer": [19, 70, 78, 84, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 134, 142, 150, 181, 182, 191, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256, 339], "enough": [19, 78, 84, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 150, 181, 182, 191, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256], "real": [19, 78, 84, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 150, 181, 182, 187, 193, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256, 335, 339, 343], "otherwis": [19, 34, 35, 36, 37, 38, 40, 41, 78, 84, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 150, 181, 182, 191, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256], "print": [19, 40, 78, 84, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 150, 181, 182, 191, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340], "warn": [19, 40, 78, 84, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 150, 181, 182, 191, 193, 194, 195, 206, 208, 211, 213, 216, 217, 225, 226, 233, 234, 246, 248, 251, 256], "dict": [19, 39, 42, 71, 72, 73, 74, 75, 76, 141, 142, 176, 181, 183, 184, 185, 186, 210, 211, 246], "addit": [19, 39, 40, 42, 141, 142, 176, 181, 210, 211, 246, 298, 336, 339, 341, 343], "argument": [19, 30, 31, 32, 39, 42, 71, 72, 73, 74, 75, 76, 141, 142, 176, 181, 183, 184, 185, 186, 196, 210, 211, 246, 256], "g": [19, 29, 39, 42, 141, 142, 176, 181, 210, 211, 246, 267, 268, 269, 287, 290, 295, 341], "alpha": [19, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 141, 142, 176, 181, 210, 211, 239, 240, 241, 244, 245, 246, 267, 268, 269, 275, 278, 282, 286, 287, 288, 289, 291, 295, 296, 297, 298, 299, 336, 338, 339], "old": [19, 34, 35, 36, 37, 38, 39, 40, 41, 42, 141, 142, 143, 176, 181, 210, 211, 246, 251, 341], "image_s": [20, 21, 280, 281, 282], "image_cent": [20, 21], "2d": [20, 21, 280, 343], "p_img": [20, 21], "p_world": 21, "p": [22, 23, 24, 25, 26, 27, 41, 141, 142, 176, 178, 180, 187, 203, 226, 234, 235, 236, 237, 238, 256, 259, 262, 281, 284, 286, 288, 292, 293, 294, 295, 297, 301, 303, 312, 313, 317, 318, 323, 328, 338, 339, 342, 343], "cylindr": [22, 24, 25, 27, 37, 286, 324], "cartesian": [22, 23, 24, 26, 300, 339, 343], "axial": [22, 24, 25, 27], "radial": [22, 23, 24, 25, 26, 27], "rho": [22, 23, 24, 25, 26, 27, 300], "azimuth": [22, 23, 24, 25, 26, 27, 256], "phi": [22, 23, 24, 25, 26, 27, 300, 309], "inclin": [23, 25, 26, 27], "elev": [23, 25, 26, 27, 256, 275, 277, 281, 282, 285, 294, 297, 298, 301, 312, 341], "theta": [23, 25, 26, 27, 89, 173, 179, 183, 188, 194, 201, 205, 206, 207, 209, 210, 218, 222, 223, 228, 230, 231, 232, 233, 287, 298, 300, 309, 318, 338, 339, 341, 343], "pi": [24, 26, 71, 72, 73, 74, 77, 78, 79, 80, 90, 91, 131, 132, 133, 147, 156, 157, 209, 267, 269, 270, 271, 282, 284, 288, 292, 293, 294, 296, 298, 300, 301, 303, 309, 318, 321, 324, 325, 326, 333, 336, 339], "class": [28, 29, 30, 31, 32, 181, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 334, 340], "transform_manag": [28, 273, 289, 304, 340], "base_fram": 28, "zlim": [28, 285], "figsiz": [28, 267, 268, 269, 270, 271, 280, 281, 282, 285, 288, 289, 333], "10": [28, 32, 176, 217, 256, 264, 268, 281, 285, 289, 294, 339], "dpi": [28, 29, 30, 31, 32], "100": [28, 36, 37, 267, 271, 287, 292, 318, 321, 323, 324, 325, 326, 328], "window_s": 28, "500": [28, 321], "600": 28, "parent": [28, 242, 246, 305, 330, 341], "base": [28, 29, 30, 31, 32, 181, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 309, 318, 334, 339, 341], "qmainwindow": 28, "gui": 28, "edit": 28, "note": [28, 40, 73, 74, 75, 78, 80, 90, 139, 151, 181, 182, 183, 186, 196, 209, 224, 246, 256, 335, 339, 341], "modul": [28, 246, 334], "requir": [28, 40, 181, 209, 242, 243, 246, 287, 339, 340], "pyqt4": 28, "transformmanag": [28, 246, 256, 258, 273, 289, 304, 340, 342], "node": [28, 181, 246, 309], "reachabl": 28, "string": [28, 29, 211], "name": [28, 29, 30, 31, 39, 181, 211, 242, 243, 246, 247, 248, 256, 257, 258, 266, 278, 282, 283, 305, 330, 339, 342, 343], "lower": [28, 242, 246], "upper": [28, 242, 246], "limit": [28, 73, 74, 242, 246, 336], "defin": [28, 29, 140, 147, 151, 166, 181, 187, 242, 246, 248, 261, 303, 307, 327, 338, 339, 341, 343], "slider": 28, "drawn": [28, 29, 30, 31, 32, 40, 42, 141, 142, 176, 181, 210, 211, 246, 256, 258, 260, 261, 262, 264, 318], "integ": 28, "inch": 28, "resolut": [28, 252, 253, 254, 255, 256, 263], "figur": [28, 29, 30, 31, 32, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 278, 280, 281, 282, 285, 288, 289, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "qwidget": 28, "widget": 28, "attribut": [28, 29, 30, 31, 32, 242, 243, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265], "express": [28, 336, 338, 339, 341, 343], "__init__": [28, 29, 30, 31, 32, 181, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "method": [28, 29, 30, 31, 32, 181, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269], "xs": 29, "ys": 29, "zs": 29, "arg": [29, 30, 31, 32, 71, 72, 73, 74, 75, 76, 183, 184, 185, 186, 249], "fancyarrowpatch": [29, 42], "patch": [29, 30, 31, 32, 42], "arrow": [29, 32, 42, 143, 176, 277, 298, 307, 335, 339], "http": [29, 187, 309, 338, 339, 341, 343], "stackoverflow": 29, "com": [29, 309, 338, 339], "11156353": 29, "915743": 29, "There": [29, 138, 168, 197, 199, 282, 336, 339, 341], "wai": [29, 335, 336, 339, 341, 342, 343], "posa": 29, "posb": 29, "connect": [29, 181, 246, 256, 258, 339], "accord": 29, "connectionstyl": 29, "clip": [29, 246], "patcha": 29, "patchb": 29, "further": [29, 256, 339], "shrunken": 29, "shrinka": 29, "shrinkb": 29, "along": [29, 35, 37, 38, 210, 252, 253, 254, 255, 256, 287, 298, 318, 343], "arrowstyl": [29, 42], "altern": [29, 343], "provid": [29, 151, 181], "ignor": [29, 71, 72, 181, 246, 248], "tail": 29, "head": [29, 341], "respect": [29, 33, 73, 74, 181, 203, 215, 243, 256, 259, 262, 264, 265, 274, 308, 338, 339, 341], "simpl": [29, 42, 181, 309, 333, 339, 340, 342], "fanci": 29, "should": [29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 176, 181, 188, 205, 209, 218, 246, 256, 258, 264, 309, 339, 341, 342], "one": [29, 80, 89, 130, 138, 139, 143, 151, 152, 162, 168, 181, 197, 199, 224, 246, 256, 259, 277, 327, 336, 339, 340], "avail": [29, 40, 181, 246, 337, 338, 339, 343], "comma": 29, "separ": 29, "meant": 29, "mutation_scal": 29, "follow": [29, 182, 274, 281, 333, 335, 337, 338, 339, 341, 343], "style": 29, "attr": 29, "curv": 29, "curvea": 29, "head_length": 29, "head_width": 29, "widtha": 29, "widthb": 29, "lengtha": 29, "lengthb": 29, "anglea": 29, "angleb": 29, "scalea": 29, "scaleb": 29, "curveb": 29, "curveab": 29, "curvefilleda": 29, "curvefilledb": 29, "curvefilledab": 29, "bracketa": 29, "bracketb": 29, "bracketab": 29, "barab": 29, "bracketcurv": 29, "curvebracket": 29, "tail_width": 29, "wedg": [29, 109, 143, 277, 339], "shrink_factor": 29, "arc3": 29, "rad": 29, "angle3": 29, "90": [29, 294, 336], "arc": [29, 318], "arma": 29, "armb": 29, "bar": 29, "fraction": [29, 275], "shrink": 29, "factor": 29, "mutation_aspect": 29, "rectangl": 29, "squeez": 29, "mutat": 29, "box": [29, 34, 39, 43, 124, 156, 211, 226, 246, 256, 266, 274, 283, 308, 309, 310, 311, 325], "stretch": 29, "invers": [29, 84, 181, 199, 246, 339, 341], "dpi_cor": 29, "current": [29, 256, 341], "linewidth": 29, "relat": [29, 173, 179, 188, 190, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 334, 339], "thing": 29, "affect": 29, "deprec": 29, "other": [29, 30, 31, 32, 71, 72, 73, 74, 75, 76, 130, 137, 175, 184, 185, 186, 290, 309, 339], "properti": [29, 30, 31, 32, 76, 182, 187, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265], "list": [29, 181, 225, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 309, 341], "agg_filt": [29, 30, 31, 32], "filter": [29, 30, 31, 32], "take": [29, 30, 31, 32, 175, 339, 341], "unknown": [29, 181, 246], "anim": [29, 30, 31, 32, 136, 181, 195, 226, 246, 249, 256, 257, 258, 259, 264, 266, 267, 268, 269, 272, 310, 322, 337], "antialias": 29, "aa": [29, 276], "capstyl": 29, "butt": 29, "round": [29, 339], "clip_box": [29, 30, 31, 32], "bbox": [29, 30, 31, 32, 43], "clip_on": [29, 30, 31, 32], "clip_path": [29, 30, 31, 32], "color": [29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 210, 239, 240, 241, 244, 245, 250, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 278, 281, 282, 290, 295, 299, 307, 323, 328], "edgecolor": 29, "ec": 29, "facecolor": 29, "fc": 29, "fill": 29, "gid": [29, 30, 31, 32], "hatch": 29, "o": [29, 181, 246], "in_layout": [29, 30, 31, 32], "joinstyl": 29, "miter": 29, "bevel": 29, "label": [29, 30, 31, 32, 33, 257, 270, 333], "object": [29, 30, 31, 32, 181, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 258, 274, 304, 308, 309, 340, 341], "linestyl": 29, "ls": 29, "offset": [29, 141, 142, 151, 152, 256, 287], "off": [29, 339], "seq": 29, "lw": [29, 267, 268, 269, 284, 286, 287, 288, 291, 292, 297, 299, 307], "path_effect": [29, 30, 31, 32], "abstractpatheffect": [29, 30, 31, 32], "picker": [29, 30, 31, 32], "callabl": [29, 30, 31, 32, 256], "raster": [29, 30, 31, 32], "sketch_param": [29, 30, 31, 32], "random": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 156, 157, 158, 159, 211, 214, 215, 234, 267, 268, 269, 274, 275, 286, 287, 289, 290, 297, 299, 304, 308, 313, 317, 327, 328, 340], "snap": [29, 30, 31, 32], "url": [29, 30, 31, 32], "visibl": [29, 30, 31, 32], "zorder": [29, 30, 31, 32], "In": [29, 89, 181, 183, 209, 246, 289, 297, 303, 304, 324, 335, 336, 339, 340, 341, 342, 343], "contrast": 29, "set": [29, 30, 31, 32, 183, 192, 216, 234, 246, 248, 256, 305, 325, 330, 336, 343], "set_data": [29, 30, 31, 32, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 321, 322, 323, 324, 325, 326, 333], "data": [29, 30, 31, 32, 247, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 341], "iter": 29, "draw": [29, 30, 31, 32, 42, 256, 258, 267, 268, 269, 318], "render": [29, 30, 31, 32, 225, 246, 249, 256, 274, 310, 334], "unset": [29, 30, 31, 32], "onc": [29, 30, 31, 32], "support": [29, 30, 31, 32, 295, 339, 343], "a2b": [30, 31, 34, 35, 36, 37, 38, 40, 170, 171, 173, 174, 178, 179, 180, 181, 182, 184, 193, 195, 202, 206, 208, 210, 211, 213, 215, 216, 217, 225, 226, 227, 228, 229, 230, 233, 234, 243, 246, 250, 252, 253, 254, 255, 256, 257, 260, 263, 270, 279, 282, 286, 287, 291, 295, 297, 298, 299, 303, 309, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 329, 332, 333, 342, 343], "artist": [30, 31, 32, 181, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 310], "its": [30, 31, 35, 39, 84, 88, 252, 253, 256, 276, 297, 336, 339, 341, 343], "draw_label_ind": [30, 31], "control": [30, 31, 309, 340], "origin": [30, 31, 40, 141, 142, 210, 246, 256, 261, 275, 283, 298, 305, 318, 330, 341], "except": [30, 31, 151, 309], "c": [30, 31, 137, 170, 171, 181, 190, 195, 217, 250, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 278, 280, 281, 287, 289, 292, 295, 303, 315, 316, 318, 319, 322, 325, 327, 328, 332, 338, 339, 342, 343], "line3d": [30, 31, 32, 256], "add_fram": [30, 31, 270, 333], "add": [30, 31, 32, 181, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 289, 309, 310, 336], "h": [32, 173, 179, 183, 188, 192, 201, 205, 206, 207, 209, 210, 218, 220, 223, 224, 228, 231, 232, 264, 271, 298, 301, 318, 320, 325, 343], "show_direct": [32, 176, 271, 294, 301], "n_frame": [32, 176, 256, 264, 267, 268, 269, 270, 271, 281, 292, 294, 301, 321, 322, 323, 324, 325, 326, 333], "sequenc": [32, 151, 176, 178, 180, 256, 264, 268, 293, 339, 342, 343], "indic": [32, 33, 176, 183, 192, 201, 210, 220, 223, 224, 256, 258, 259, 262, 264, 265, 298, 318, 335, 339, 341, 343], "direct": [32, 33, 42, 80, 124, 130, 141, 142, 143, 176, 181, 183, 192, 201, 210, 220, 223, 224, 225, 235, 237, 246, 252, 254, 256, 265, 274, 277, 279, 290, 298, 307, 308, 314, 318, 332, 335, 339, 341, 343], "onto": 32, "add_trajectori": [32, 271, 287, 301], "straight": [32, 33, 43, 44, 179, 206, 226, 274, 298, 308, 318], "dual": [32, 167, 168, 169, 172, 177, 179, 185, 186, 187, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 211, 212, 215, 218, 223, 227, 228, 274, 308, 337, 338], "po": 33, "111": [33, 268, 270, 271, 310, 313, 333], "n_tick": [33, 300, 302], "nrow": 33, "ncol": 33, "plot_numb": 33, "For": [33, 175, 181, 199, 294, 336, 338, 341, 342, 343], "cm": 33, "km": 33, "shown": [33, 143, 277, 287, 333, 338, 339], "tick": 33, "each": [33, 35, 36, 37, 38, 41, 142, 143, 151, 152, 156, 157, 159, 176, 178, 181, 199, 214, 215, 237, 238, 246, 256, 259, 277, 339], "differ": [33, 37, 151, 168, 181, 196, 197, 199, 215, 274, 294, 308, 336, 338, 339, 341, 342, 343], "refer": [33, 181, 215, 217, 246, 248, 274, 308, 336, 341], "camera": [33, 59, 154, 176, 180, 211, 226, 229, 256, 274, 304, 308, 310, 337, 340, 341], "geometri": [33, 34, 35, 36, 37, 38, 41, 211, 215, 234, 239, 240, 243, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 274, 283, 308, 339], "wirefram": [34, 35, 36, 37, 38, 40, 41, 239, 240, 241, 244, 245, 246, 278, 286, 295, 297, 299], "k": [34, 35, 36, 37, 38, 39, 40, 41, 271, 278, 287, 292, 299, 339, 343], "surfac": [34, 35, 36, 37, 38, 40, 41, 246, 286], "black": [34, 35, 36, 37, 38, 39, 40, 41, 143, 256, 259, 262, 264, 265, 277, 287, 318, 339], "mesh": [34, 35, 40, 181, 211, 246, 248, 256, 258, 266, 274, 281, 308, 309, 310, 340], "radiu": [35, 36, 37, 41, 240, 245, 252, 253, 254, 256, 263, 283, 286, 294, 295, 297, 299, 309, 315, 316, 317, 318, 322, 329], "20": [35, 36, 38, 41, 252, 253, 254, 255, 256, 263, 277, 285, 289, 299], "capsul": [35, 256, 266, 274, 310], "volum": [35, 37, 252, 254, 256], "cover": [35, 37, 252, 254, 256, 337], "sphere": [35, 41, 43, 211, 246, 252, 256, 262, 266, 274, 283, 300, 308, 309, 310, 311, 318, 339], "move": [35, 37, 252, 254, 256, 318, 341], "segment": [35, 37, 252, 253, 254, 255, 256, 259, 263], "locat": [35, 246, 248, 282], "discret": [35, 36, 37, 38, 41], "cone": [36, 256, 266, 274, 291, 310], "thick": [37, 286, 287], "cylind": [37, 39, 43, 124, 125, 156, 211, 226, 228, 246, 256, 257, 266, 274, 283, 308, 309, 310], "disk": [37, 254], "shell": [37, 286], "subtract": [37, 336], "outer": [37, 109, 166, 294], "obtain": [37, 181], "inner": [37, 109, 294], "greater": 37, "radii": [38, 255, 256, 295, 319], "ellipsoid": [38, 256, 266, 274, 310], "l": 39, "abov": [39, 339], "text": [39, 294], "middl": [39, 341], "fontsiz": [39, 278], "filenam": [40, 181, 244, 246, 256, 260, 291, 296, 309, 318, 320, 324, 340], "convex_hul": [40, 239, 240, 241, 244, 245, 309], "librari": [40, 295, 340, 341], "trimesh": [40, 309, 340], "file": [40, 181, 242, 243, 246, 248, 256, 260, 272, 291, 306, 308, 309, 310, 320, 326, 331, 334, 340], "convex": [40, 246], "hull": [40, 246], "instead": [40, 70, 188, 205, 209, 218, 246], "much": 40, "faster": [40, 246, 334], "see": [42, 71, 72, 73, 74, 75, 76, 184, 185, 186, 187, 217, 267, 269, 275, 280, 282, 294, 296, 300, 318, 334, 335, 336, 338, 339, 341], "document": [42, 71, 72, 73, 74, 75, 76, 184, 185, 186, 307, 337], "more": [42, 71, 72, 73, 74, 75, 76, 80, 184, 185, 186, 307, 334, 338, 339, 342, 343], "construct": [42, 130, 142, 159, 162, 274, 277, 303, 308, 339], "left": [43, 89, 170, 171, 182, 190, 191, 194, 195, 275, 285, 335, 338, 339, 342, 343], "bottom": [43, 275, 285], "right": [43, 89, 182, 190, 191, 194, 275, 285, 335, 338, 339, 342, 343], "remov": [43, 181, 246, 250, 256, 258, 263, 266, 274, 307, 310, 339], "border": 43, "r": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 78, 84, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 142, 150, 160, 188, 190, 191, 194, 216, 226, 256, 267, 268, 269, 270, 275, 276, 282, 284, 285, 286, 287, 288, 290, 293, 295, 296, 297, 301, 306, 309, 311, 312, 313, 317, 318, 321, 323, 324, 326, 328, 331, 333, 336, 338, 339, 340, 341, 343], "invalid": [44, 82, 83, 84, 85, 86, 87, 88, 123, 136, 181, 187, 188, 189, 190, 191, 192, 193, 194], "compar": [44, 59, 68, 124, 128, 141, 142, 148, 267, 269, 274, 285, 308, 341], "variou": [44, 59, 68, 124, 128, 141, 142, 148, 274, 308, 341], "definit": [44, 59, 68, 124, 128, 141, 142, 148, 246, 248, 274, 308, 322, 340], "passiv": [44, 95, 96, 123, 126, 127, 136, 142, 274, 308, 339], "xyx": [45, 58, 97, 110, 336, 339], "around": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 275, 294, 307, 339, 341], "editor": [45, 181, 226, 274], "xyz": [46, 59, 73, 95, 98, 111, 126, 283, 288, 305, 330, 336, 339, 341], "cardan": [46, 48, 50, 51, 53, 55, 59, 61, 63, 64, 66, 68, 98, 100, 102, 103, 105, 107, 111, 113, 115, 116, 118, 120, 336], "xzx": [47, 60, 99, 112, 336, 339], "xzy": [48, 61, 100, 113, 336, 339], "yxy": [49, 62, 101, 114, 336, 339], "yxz": [50, 63, 102, 115, 336, 339], "yzx": [51, 64, 103, 116, 336, 339], "yzy": [52, 65, 104, 117, 336, 339], "zxy": [53, 66, 105, 118, 336, 339], "zxz": [54, 67, 106, 119, 336, 339], "wa": [54, 56], "implement": [54, 56, 70, 333, 339], "correctli": [54, 56, 342], "version": [54, 56, 181, 283, 305, 330, 341], "order": [54, 56, 172, 176, 177, 178, 180, 196, 256, 334, 336, 339], "revers": [54, 56, 163, 339], "actual": [54, 56, 181, 217, 246, 335, 341], "fix": [54, 56, 242, 305, 322, 330, 336, 339, 341], "zyx": [55, 68, 74, 96, 107, 120, 127, 336, 339, 341], "zyz": [56, 69, 108, 121, 336, 339, 341], "rpy": [57, 283, 305, 330], "roll": [57, 336, 341], "pitch": [57, 175, 183, 192, 201, 209, 210, 220, 223, 224, 318, 336, 341, 343], "yaw": [57, 336, 341], "through": [57, 182, 195, 210, 211, 220, 226, 228, 274, 308, 335, 338, 339, 343], "screw": [57, 173, 175, 179, 183, 188, 190, 191, 192, 194, 195, 201, 204, 205, 206, 207, 209, 210, 211, 214, 218, 219, 220, 221, 222, 223, 224, 226, 228, 231, 232, 274, 287, 308, 318, 343], "motion": [57, 195, 210, 211, 220, 226, 228, 274, 287, 308, 341, 343], "manag": [59, 158, 181, 226, 229, 246, 247, 274, 289, 308, 309, 334, 337], "fast": 70, "stabl": 70, "solut": [70, 78, 80, 90, 139, 224, 336, 341], "wrench": [70, 137, 165, 181, 182, 192, 218, 224, 225, 228, 234, 235, 236, 238, 246, 254, 256, 257, 266, 274, 310], "a1": [71, 72], "a2": [71, 72], "assert": [71, 72, 73, 74, 75, 76, 183, 184, 185, 186], "approxim": [71, 72, 73, 74, 75, 84, 186], "equal": [71, 72, 73, 74, 75, 186, 280, 282], "usual": [71, 72, 77, 78, 79, 89, 90, 91, 148, 149, 150, 267, 269, 336, 341], "within": [71, 72, 291, 306, 320, 326, 331, 340], "howev": [71, 72, 335, 336, 339, 341], "constraint": [71, 72], "comparison": [71, 72, 339, 341], "numpi": [71, 72, 73, 74, 75, 76, 151, 184, 185, 186, 267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 307, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 338, 339, 340, 343], "test": [71, 72, 73, 74, 75, 76, 184, 185, 186, 267, 269, 281, 291, 296, 306, 309, 311, 318, 320, 324, 326, 331, 340], "assert_array_almost_equ": [71, 72, 73, 74, 75, 76, 183, 184, 185, 186], "detail": [71, 72, 73, 74, 75, 76, 184, 185, 186, 334, 338, 339], "e_xyz1": 73, "e_xyz2": 73, "onli": [73, 74, 182, 242, 243, 261, 336, 339, 341, 343], "uniqu": [73, 74, 79, 209], "e_zyx1": 74, "e_zyx2": 74, "det": [76, 339], "check": [76, 78, 84, 88, 181, 182, 191, 194, 195, 206, 207, 208, 216, 228, 234, 246], "constrain": [77, 78, 79, 80, 90, 91], "oper": [78, 79, 90, 148, 175, 181, 217, 246, 339, 341, 343], "possibl": [78, 80, 90, 181, 204, 246, 285, 336, 339, 341, 343], "when": [78, 90, 150, 192, 256, 335, 336, 338, 339, 341, 342, 343], "180": [78, 90, 310, 330, 341], "degre": [78, 90, 256, 336, 339, 341], "so": [79, 85, 86, 130, 187, 209, 224, 334, 335, 336, 337, 340, 341, 342], "don": 80, "done": [80, 287], "intern": [80, 161, 162, 181, 341], "toler": [84, 88, 191, 194], "1e": [84, 88, 191, 194], "06": [84, 88, 191, 194], "multipli": [84, 170, 171, 195, 339], "ident": 84, "determin": [84, 335, 336, 341], "6": [84, 88, 173, 175, 179, 182, 188, 190, 191, 194, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 277, 278, 285, 289, 294, 296, 298, 300, 302, 309, 318, 322, 324, 336, 338, 343], "threshold": [84, 88, 191, 194], "assert_rotation_matrix": 84, "thei": [86, 143, 277, 336, 339, 341, 343], "rotor": [87, 93, 129, 160, 161, 162, 163, 164, 337, 338], "b_yz": [87, 93, 109, 129, 140, 160, 161, 162, 163, 164, 166], "b_zx": [87, 93, 109, 129, 140, 160, 161, 162, 163, 164, 166], "b_xy": [87, 93, 109, 129, 140, 160, 161, 162, 163, 164, 166], "transpos": [88, 182, 339], "neg": [88, 175, 188, 205, 209, 218, 339], "dimension": [89, 338, 339, 343], "4th": 89, "mean": [89, 151, 170, 171, 181, 195, 246, 339, 341], "hat": [89, 192, 338, 339, 343], "rotor1": 93, "rotor2": 93, "r1": [93, 294], "r2": 93, "e_xyz": [95, 122], "e_zyx": [96, 122], "geometr": [109, 239, 240, 241, 244, 245, 295, 339], "dot": [109, 181, 246, 267, 269, 285, 294, 297, 309, 318, 322, 339, 343], "ab": [109, 182, 339, 343], "cdot": [109, 339, 341], "cosin": 109, "sine": 109, "multivector": [109, 339], "compos": [109, 301], "bivector": [109, 140, 142, 143, 161, 166, 274, 308, 339], "anoth": [122, 162, 217, 336, 338, 339, 340, 341], "slerp": [124, 150, 153, 176, 267, 269, 274, 308], "tait": [126, 127, 336, 341], "bryan": [126, 127, 336, 341], "integr": [128, 142, 152, 157, 158, 272, 274, 308, 322, 339], "orient": [128, 138, 148, 153, 189, 200, 212, 213, 229, 267, 272, 274, 282, 297, 334, 335, 338, 339, 341, 343], "orthogon": [130, 137, 165, 183, 224, 339, 343], "reject": [130, 290], "parallel": [130, 341], "radian": [131, 246, 336, 339], "a_norm": 131, "No": [132, 133, 309, 339], "small": [134, 294], "error": [134, 339], "u": 135, "perpendicular": 137, "target_quaternion": 138, "closest": 138, "target": [138, 341], "alwai": [138, 151, 181, 246, 336, 339, 342], "exact": [138, 151], "unsur": 138, "select": [138, 224, 341], "closest_quaternion": 138, "euclidean": [138, 343], "plane_norm": 139, "infinit": [139, 183, 192, 201, 210, 220, 223, 224, 256, 318, 336, 343], "mani": [139, 300, 338, 342], "becaus": [139, 181, 209, 287, 291, 306, 320, 326, 331, 336, 339, 340], "ani": [139, 176, 181, 224, 256, 275, 288, 298, 339, 343], "also": [139, 166, 182, 187, 318, 334, 336, 339, 340, 341, 343], "determinist": 139, "togeth": [139, 143, 166, 277, 335], "orthonorm": [139, 338, 339], "space": [139, 338, 339, 341, 343], "could": [139, 336, 341], "x_axi": 139, "y_axi": 139, "grei": [143, 277], "parallelogram": [143, 277, 339], "area": [143, 277, 339], "These": [143, 277, 335, 339, 341], "furthermor": [143, 277, 336], "extract": [143, 277, 303], "rearrang": [143, 277], "element": [143, 176, 235, 236, 237, 238, 256, 277, 339], "format": [146, 246, 341], "omega": [146, 190, 191, 194, 214, 338, 339, 343], "log": [146, 147], "q_1": [146, 147], "overlin": [146, 147], "q_2": [146, 147], "angular": [147, 151, 152, 267, 268, 269, 293, 339, 343], "metric": 147, "d": [147, 181, 256, 261, 289, 305, 323, 324, 328, 330], "min": [147, 281], "dist": 147, "dt": [151, 152, 268, 293, 297, 322], "deriv": [151, 339], "gradient": 151, "central": 151, "addition": 151, "accept": 151, "expect": 151, "constant": [151, 204, 267, 269, 297, 322, 336], "whole": [151, 217], "non": [151, 267, 269, 339], "manual": 151, "divid": [151, 339], "veloc": [151, 152, 204, 267, 268, 269, 293, 339, 343], "afterward": 151, "qd": 152, "q0": [152, 268], "initi": [152, 247, 276, 318, 325], "random_st": [156, 157, 158, 159, 214, 215, 268, 286, 287, 289, 290, 295, 297, 299, 304, 313, 317, 327, 328, 340], "randomst": [156, 157, 158, 159, 214, 215, 268, 275, 286, 287, 289, 290, 295, 297, 299, 304, 313, 317, 327, 328, 340], "mt19937": [156, 157, 158, 159, 214, 215], "0x7f3436478540": 156, "uniformli": [156, 157], "mathcal": [156, 157, 159, 182, 188, 190, 191, 194, 214, 215, 338, 343], "mu": [156, 157, 159, 214, 215], "sigma": [156, 157, 159, 187, 214, 215], "np": [156, 157, 158, 159, 214, 215, 267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 307, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 340], "seed": [156, 157, 158, 159, 214, 215, 267, 269], "0x7f3436478640": 157, "0x7f3436478740": 158, "0x7f3436478440": 159, "distribut": [159, 214], "v_from": 162, "v_to": 162, "reverse_rotor": 163, "a_on_b": 165, "exterior": 166, "dqs1": 167, "dqs2": 167, "dq1": [167, 186, 196, 287], "dq2": [167, 186, 196, 287], "8": [167, 168, 169, 172, 177, 185, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 223, 227, 271, 277, 285, 286, 304, 305, 325, 338, 340], "pw": [167, 168, 172, 177, 185, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 223, 227], "px": [167, 168, 172, 177, 185, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 223, 227], "py": [167, 168, 172, 177, 185, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 223, 227, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "pz": [167, 168, 172, 177, 185, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 223, 227], "qw": [167, 168, 172, 177, 178, 180, 185, 186, 187, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 213, 223, 227, 229], "qx": [167, 168, 172, 177, 178, 180, 185, 186, 187, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 213, 223, 227, 229], "qy": [167, 168, 172, 177, 178, 180, 185, 186, 187, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 213, 223, 227, 229], "qz": [167, 168, 172, 177, 178, 180, 185, 186, 187, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 213, 223, 227, 229], "dqs3": 167, "dq": [168, 169, 172, 177, 185, 187, 197, 198, 199, 200, 201, 202, 203, 212, 223, 227, 287], "three": [168, 197, 199, 288, 334, 336, 338, 339], "combin": [168, 197, 285, 341], "dq_conjug": [168, 197], "b2c": [170, 171, 181, 195, 342], "n_transform": [170, 171], "a2c": [170, 171, 195, 289, 342], "pq": [172, 177, 189, 200, 212, 213, 229, 343], "get": [172, 177, 178, 180, 181, 246, 309, 336], "7": [172, 176, 177, 178, 180, 189, 200, 212, 213, 229, 256, 285, 286, 292, 294, 296, 305, 309, 324, 330, 338, 343], "stheta": [173, 175, 179, 188, 205, 206, 207, 209, 218, 228, 231, 298, 343], "omega_1": [173, 179, 188, 190, 191, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 339, 343], "omega_2": [173, 179, 188, 190, 191, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 339, 343], "omega_3": [173, 179, 188, 190, 191, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 339, 343], "v_1": [173, 179, 188, 190, 191, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 343], "v_2": [173, 179, 188, 190, 191, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 343], "v_3": [173, 179, 188, 190, 191, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 343], "where": [173, 179, 181, 187, 188, 190, 205, 206, 207, 209, 214, 218, 219, 220, 221, 224, 228, 231, 246, 276, 334, 335, 338, 339, 343], "translat": [173, 179, 182, 183, 188, 190, 191, 192, 201, 205, 206, 207, 209, 210, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 231, 232, 234, 287, 298, 318, 337, 338, 341, 343], "b2a": [174, 181, 208, 246, 303], "switch": 175, "adapt": [175, 183], "accordingli": 175, "omega_x": [175, 339], "omega_i": [175, 339], "omega_z": [175, 339], "v_x": 175, "v_y": 175, "v_z": 175, "vx": [176, 256], "vy": [176, 256], "vz": [176, 256], "simplifi": 181, "ro": [181, 246, 248, 341], "tf": 181, "tempor": 181, "aspect": [181, 280, 282], "user": [181, 336, 341], "regist": [181, 246, 256, 266], "enabl": 181, "know": [181, 282, 303, 335, 336, 340], "d2c": 181, "request": [181, 246], "automat": [181, 304, 340], "c2b": [181, 303], "introduc": 181, "inconsist": 181, "ad": [181, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 311], "state": [181, 322, 339, 341], "seem": [181, 339], "trivial": [181, 339], "case": [181, 183, 209, 246, 336, 342, 343], "computation": [181, 339], "complex": [181, 246, 334, 342], "larg": 181, "graph": [181, 246, 256, 311, 324, 326, 340], "explicitli": 181, "check_consist": [181, 246], "exist": [181, 246, 281, 291, 296, 306, 311, 318, 320, 324, 326, 331, 340], "might": [181, 246, 339, 342], "significantli": [181, 246], "slow": [181, 246], "down": [181, 246, 341], "some": [181, 246, 248, 275, 305, 330, 335, 338, 339, 341, 342], "add_transform": [181, 246, 273, 289, 304, 340], "from_fram": [181, 246, 309], "to_fram": [181, 246, 309], "hashabl": [181, 246], "self": [181, 246, 309], "chain": [181, 246, 334, 339], "remove_transform": [181, 246], "noth": [181, 246], "happen": [181, 246], "has_fram": [181, 246], "get_transform": [181, 246, 273, 304, 309, 318, 340], "keyerror": [181, 246], "plot_frames_in": [181, 246, 283, 289, 304, 305, 306, 340], "show_nam": [181, 246, 256, 258, 305, 306, 311, 331, 340], "whitelist": [181, 246, 256, 258, 305, 306, 311, 330, 331, 340], "omit": [181, 246, 334], "plot_connections_in": [181, 246, 305, 306, 340], "known": [181, 246], "both": [181, 187, 246, 267, 269, 276, 339, 341], "directli": [181, 246, 295, 339, 343], "Is": [181, 246], "connected_compon": [181, 246], "larger": [181, 246, 294, 298], "without": [181, 246, 339, 341], "n_connected_compon": [181, 246], "write_png": [181, 246, 340], "prog": [181, 246], "png": [181, 246, 333, 335, 336, 339, 340, 341, 343], "python": [181, 246, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 337], "packag": [181, 246, 248, 341], "pydot": [181, 246], "instal": [181, 246], "graphviz": [181, 246], "your": [181, 246, 309, 341], "execut": [181, 246, 272, 308, 310], "found": [181, 246], "absolut": [181, 246], "twopi": [181, 246], "neato": [181, 246], "circo": [181, 246], "fdp": [181, 246], "sfdp": [181, 246], "importerror": [181, 246, 309], "robot": [181, 246, 247, 248, 256, 258, 266, 274, 283, 304, 305, 308, 310, 318, 330, 338, 340, 341, 343], "urdf": [181, 225, 256, 258, 266, 274, 296, 308, 310, 311, 318, 324, 340, 341], "collis": [181, 243, 246, 256, 258, 274, 308, 309, 340], "joint": [181, 246, 247, 248, 256, 266, 274, 306, 308, 309, 310, 311, 324, 326, 331, 340, 341], "adjoint": [182, 318], "ad_": 182, "_": [182, 338, 339, 342, 343], "ba": [182, 338, 342], "twist": [182, 322], "_a": [182, 338, 339, 342], "f": [182, 296, 306, 309, 311, 318, 324, 326, 331, 335, 340], "_b": [182, 338, 339, 343], "_1": 182, "_2": 182, "adj_a2b": 182, "s_axis1": 183, "h1": 183, "theta1": 183, "s_axis2": 183, "h2": 183, "theta2": 183, "similar": [183, 338, 339, 341, 343], "need": [183, 261, 307, 309, 343], "depend": [183, 341], "nose": 183, "s_axi": [183, 192, 201, 210, 220, 223, 224, 298, 318, 343], "ratio": [183, 192, 201, 210, 220, 223, 224, 318, 343], "pure": [183, 192, 201, 209, 210, 220, 223, 224, 318], "web": [187, 343], "cs": [187, 343], "iastat": [187, 343], "edu": [187, 343], "cs577": [187, 343], "handout": [187, 343], "pdf": [187, 333, 335, 336, 338, 339, 340, 341, 343], "epsilon": [187, 203, 338, 343], "p_w": [187, 343], "p_x": [187, 343], "p_y": [187, 343], "p_z": [187, 343], "q_w": [187, 343], "q_x": [187, 343], "q_y": [187, 343], "q_z": [187, 343], "mathbb": [188, 190, 191, 194, 339, 343], "relev": [188, 205, 209, 218, 305, 330, 341], "recov": [188, 205, 209, 218], "screw_axi": [190, 205, 214, 218, 219, 220, 221, 224, 287, 343], "begin": [190, 191, 335, 339, 341, 343], "describ": [190, 192, 205, 214, 218, 219, 220, 221, 224, 339, 341, 343], "screw_matrix": [191, 219, 221, 222, 232, 343], "cc": [191, 343], "row": [191, 219, 221, 222, 232, 237, 238, 339, 341], "Will": 192, "transform_log": [194, 207, 222, 230, 231, 232, 233, 343], "concat": [196, 271, 287, 298, 303, 325, 342], "dq3": 196, "equival": [199, 339], "dq_q_conjug": 199, "power": 203, "expon": 203, "dq_t": 203, "sclerp": [204, 287], "although": [204, 339], "channel": 210, "annot": 211, "0x7f34363d5340": 214, "standard": [214, 339, 341], "0x7f34363d5240": 215, "s_xr": 217, "s_yr": 217, "s_zr": 217, "s_r": 217, "s_xt": 217, "s_yt": 217, "s_zt": 217, "s_t": 217, "s_d": 217, "algorithm": [217, 339], "analyt": 217, "approach": [217, 339, 341], "design": 217, "haptic": 217, "human": [217, 341], "machin": 217, "interfac": [217, 318, 336, 341], "bertold": 217, "bongardt": 217, "displac": [217, 298, 318], "a2b_scal": 217, "just": [224, 309, 338, 339, 343], "sinc": [224, 336, 338], "pa": 225, "pb": 225, "make": [226, 246, 256, 309, 336, 339, 341, 342], "n_direct": 237, "mesh_path": [239, 240, 241, 244, 245, 246, 248, 296, 306, 309, 311, 318, 324, 326, 331, 340], "package_dir": [239, 240, 241, 244, 245, 246, 248], "pars": [239, 240, 241, 242, 243, 244, 245, 247, 248], "xml": [239, 240, 241, 244, 245, 283, 305, 330], "tm": [239, 240, 241, 244, 245, 247, 256, 258, 273, 283, 289, 296, 304, 305, 306, 309, 311, 318, 324, 326, 330, 331, 340], "temporarili": [242, 243], "while": [242, 243, 281, 291, 296, 306, 311, 318, 320, 324, 326, 331, 340], "child": [242, 246, 305, 330, 341], "child2par": [242, 246], "joint_nam": [242, 246, 305, 324, 330], "joint_axi": 242, "joint_typ": [242, 246], "revolut": [242, 246, 305, 330], "collision_object": [243, 309], "calcul": [243, 340], "inertial_fram": 243, "inerti": 243, "mass": [243, 297, 318, 322], "inertia": [243, 297, 322], "load": [246, 283, 291, 305, 306, 309, 320, 326, 330, 331, 334, 340], "unifi": 246, "descript": [246, 283, 305, 330, 337, 343], "link": [246, 247, 248, 283, 305, 330, 340], "beautifulsoup4": 246, "add_joint": 246, "inf": 246, "type": [246, 305, 330], "prismat": 246, "continu": [246, 339], "set_joint": [246, 296, 305, 306, 309, 311, 318, 324, 326, 330, 331, 340], "get_joint_limit": 246, "load_urdf": [246, 283, 296, 305, 306, 309, 311, 318, 324, 326, 330, 331, 340], "urdf_xml": [246, 248], "search": [246, 248, 334], "textur": [246, 248], "variabl": [246, 248, 339, 343], "prefix": [246, 248], "plot_visu": [246, 296, 306, 340], "convex_hull_of_mesh": 246, "lot": [246, 341], "plot_collision_object": [246, 283, 308], "robot_nam": [247, 248], "previous": [247, 311], "urdftransformmanag": [247, 283, 296, 305, 306, 309, 311, 318, 324, 326, 330, 331, 340], "inform": [248, 334, 339, 343], "urdfexcept": 248, "abstract": 249, "add_artist": [249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 311, 325], "expos": [249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 336], "updat": [250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 322], "half": 252, "longitud": [252, 255, 256, 263], "split": [252, 253, 254, 255, 256, 263, 339], "latitud": [252, 255, 256, 263], "includ": [252, 255, 256, 263, 309, 343], "north": [252, 255, 256, 263, 341], "south": [252, 255, 256, 263], "pole": [252, 255, 256, 263, 300], "circl": [253, 254, 256, 294], "window_nam": [256, 266], "open3d": [256, 266, 318, 334], "with_key_callback": [256, 266], "level": 256, "kei": [256, 266, 338], "escap": 256, "window": [256, 266], "titl": [256, 266], "callback": [256, 266], "add_geometri": 256, "update_geometri": 256, "remove_artist": [256, 311], "set_line_width": 256, "line_width": 256, "featur": 256, "work": [256, 337], "moment": 256, "set_zoom": [256, 311, 312, 317, 324, 325, 326, 331], "zoom": 256, "loop": [256, 321, 322, 323, 324, 325, 326, 334], "farg": [256, 267, 268, 269, 270, 271, 321, 322, 323, 324, 325, 326, 333], "index": [256, 334, 341, 343], "total": [256, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "run": [256, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340], "runtimeerror": 256, "view_init": [256, 275, 277, 281, 282, 285, 289, 294, 297, 298, 301, 311, 312, 313, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332], "azim": [256, 275, 277, 281, 282, 285, 294, 297, 298, 301, 312], "60": [256, 285], "30": [256, 282, 289, 297, 312], "individu": [256, 259, 334], "red": [256, 259, 262, 264, 265, 287, 298, 318, 339], "green": [256, 259, 262, 264, 265, 287, 318, 339], "blue": [256, 259, 262, 264, 265, 287, 339], "scatter": [256, 266, 274, 280, 282, 300, 303, 310], "05": [256, 262, 279, 285, 294, 297, 298, 305, 309, 314, 318, 330], "collect": [256, 262, 328], "point_collect": 256, "pointcollection3d": 256, "plot_vector": [256, 276, 290, 307, 308, 332], "vector3d": 256, "plot_basi": [256, 275, 276, 277, 284, 285, 288, 290, 293, 312, 321, 323, 328, 339], "plot_transform": [256, 278, 279, 280, 281, 282, 286, 287, 291, 295, 297, 298, 299, 302, 303, 308, 313, 314, 315, 316, 317, 318, 319, 320, 322, 327, 329, 332], "plot_trajectori": [256, 281, 292, 294], "plot_spher": [256, 295, 299, 308, 311, 318, 329], "plot_box": [256, 278, 295, 308, 311, 313], "plot_cylind": [256, 286, 295, 297, 308, 317, 322], "plot_mesh": [256, 291, 308, 320], "n_vertic": [256, 260], "plot_ellipsoid": [256, 295, 319], "plot_capsul": [256, 295, 315], "plot_con": [256, 295, 316], "plot_plan": [256, 327], "point_in_plan": [256, 261, 327], "hess": [256, 261, 327], "plot_graph": [256, 311, 318, 324, 326, 330, 331], "show_fram": [256, 258, 311, 324, 330, 331], "show_connect": [256, 258, 311, 326, 330, 331], "show_visu": [256, 258, 311, 318, 324, 326, 331], "show_collision_object": [256, 258], "store": [256, 258, 338, 339], "plot_camera": [256, 279, 281, 282, 314], "save_imag": [256, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "save": 256, "squar": 261, "neither": 261, "nor": 261, "click": [267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "download": [267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 341], "full": [267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 343], "exampl": [267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 343], "code": [267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 340, 341, 342, 343], "linearli": [267, 269], "measur": [267, 269, 318, 335, 338], "better": [267, 269], "idea": [267, 269], "__doc__": [267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 340], "import": [267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 339, 340, 342], "pyplot": [267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 333, 340], "plt": [267, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 333, 340], "mpl_toolkit": [267, 268, 269, 270, 271, 285, 333], "mplot3d": [267, 268, 269, 270, 271, 285, 333], "axes3d": [267, 268, 269, 270, 271, 333], "pytransform3d": [267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343], "pr": [267, 268, 269, 270, 277, 281, 284, 288, 304, 309, 321, 327, 333, 340], "last_a": 267, "rotation_axi": 267, "def": [267, 268, 269, 270, 271, 297, 301, 309, 318, 321, 322, 323, 324, 325, 326, 333], "interpolate_linear": [267, 269], "update_lin": [267, 268, 269], "rot": [267, 268, 269], "profil": [267, 269], "global": [267, 269, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 339, 341], "axis_angle_slerp": 267, "els": [267, 269, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "matrix_from_axis_angl": [267, 275, 276, 284, 286, 294, 303, 313, 317], "set_3d_properti": [267, 268, 269], "ones": [267, 269, 291, 293, 303, 309, 320], "sqrt": [267, 269, 279, 292, 293, 314], "append": [267, 269, 309], "angle_between_vector": [267, 318], "linspac": [267, 269, 271, 275, 281, 287, 292, 294, 297, 300, 301, 309, 318, 323, 325, 328], "len": [267, 269, 271, 280, 281, 285, 293, 294, 309, 318, 323, 325, 328], "__name__": [267, 268, 269, 270, 271, 333], "__main__": [267, 268, 269, 270, 271, 333], "norm_vector": [267, 327], "randn": [267, 269, 286, 295, 317, 327, 328], "fig": [267, 268, 269, 270, 271, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "12": [267, 269, 275, 280, 282, 285, 297, 322, 339, 343], "add_subplot": [267, 268, 269, 270, 271, 333], "121": [267, 269, 280, 282, 289], "set_xlim": [267, 268, 269, 270, 271, 277, 280, 281, 282, 286, 301, 304, 305, 306, 333, 340], "set_ylim": [267, 268, 269, 270, 271, 277, 280, 281, 282, 286, 301, 304, 305, 306, 333, 340], "set_zlim": [267, 268, 269, 270, 271, 277, 280, 281, 283, 286, 304, 305, 306, 333, 340], "set_xlabel": [267, 268, 269, 270, 271, 280, 333], "set_ylabel": [267, 268, 269, 270, 271, 280, 333], "set_zlabel": [267, 268, 269, 270, 271, 280, 333], "re": [267, 269], "grai": [267, 269, 318, 339], "orang": [267, 269, 307], "turquois": [267, 269], "violet": [267, 269], "122": [267, 269, 280, 282, 289, 310, 317], "funcanim": [267, 268, 269, 270, 271, 333], "50": [267, 269, 270, 271, 275, 309, 333], "blit": [267, 268, 269, 270, 271, 333], "script": [267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "minut": [267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "131": [267, 269, 272], "animate_angle_axis_interpol": [267, 272], "jupyt": [267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "notebook": [267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "ipynb": [267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "galleri": [267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "sphinx": [267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "acceler": [268, 297, 322, 339], "matrix_from_quaternion": [268, 269, 284, 293], "random_quaternion": [268, 304, 340], "1000": [268, 301, 334], "01": [268, 308, 322], "angular_acceler": [268, 297], "empti": [268, 292, 293, 318, 323, 325, 328], "random_compact_axis_angl": 268, "angular_veloc": [268, 293, 297], "vstack": [268, 287, 301, 318], "cumsum": 268, "quaternion_integr": [268, 293], "174": [268, 272], "animate_quaternion_integr": [268, 272], "last_r": 269, "quaternion_slerp": [269, 294], "linalg": [269, 287, 297, 309, 322], "quaternion_from_axis_angl": [269, 284], "200": [269, 271, 325], "animate_quaternion_interpol": [269, 272], "plot_util": [270, 271, 276, 278, 282, 286, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 307, 333], "update_fram": [270, 333], "passive_matrix_from_angl": [270, 271, 285, 321, 325, 333], "ey": [270, 271, 284, 285, 286, 288, 291, 295, 297, 299, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 332, 333], "083": [270, 272], "animate_rot": [270, 272], "r_id": [271, 325], "transform_from": [271, 273, 282, 286, 297, 298, 301, 303, 304, 313, 317, 325, 340], "update_trajectori": [271, 325], "progress": [271, 325], "h0": [271, 325], "h_mod": [271, 325], "enumer": [271, 294, 318, 325], "097": [271, 272], "animate_trajectori": [271, 272], "00": [272, 308, 310], "616": 272, "_auto_examples_anim": 272, "mb": [272, 308, 310], "manipul": [273, 340], "transformeditor": 273, "active_matrix_from_extrinsic_euler_xyx": 273, "tree": 273, "car": 273, "te": 273, "000": [273, 309, 310], "app_transformation_editor": 273, "how": [274, 276, 283, 289, 291, 305, 306, 311, 320, 326, 330, 331, 335, 337, 339, 340, 341], "_auto_examples_python": 274, "zip": [274, 281, 305, 318, 330], "_auto_examples_jupyt": 274, "singl": [275, 339], "random_axis_angl": [275, 286, 313, 317], "plot_axis_angl": [275, 276, 284, 288, 308], "copi": [275, 318], "subplots_adjust": [275, 285, 298], "105": 275, "161": [275, 308], "shorter": 276, "axis_angle_from_two_direct": 276, "make_3d_axi": [276, 282, 289, 295, 300, 301, 302], "76958075": 276, "49039301": 276, "40897453": 276, "092": [276, 304, 308], "plot_axis_angle_from_two_vector": [276, 308], "9": [277, 285, 318, 338, 339], "plot_bivector": [277, 308], "tight_layout": [277, 302], "114": [277, 308, 310, 326], "plot_length_vari": 278, "remove_fram": [278, 286, 288, 299, 301], "55": 278, "14": 278, "fontfamili": 278, "serif": 278, "156": [278, 308], "desir": [279, 314], "pc": [279, 281, 300], "pt": [279, 281, 287, 304, 314, 318, 340], "transform_from_pq": [279, 304, 314, 340], "036": [279, 314], "024": [279, 314], "intrinsic_matrix": [279, 281, 314], "080": [279, 308], "plot_camera_3d": [279, 308], "make_world_grid": [280, 282], "cam2sensor": 280, "sensor2img": 280, "15": [280, 293, 306, 312, 340], "640": [280, 282], "480": [280, 282], "subplot": [280, 282, 285], "set_titl": [280, 282, 285], "cam_grid": 280, "img_grid": 280, "arang": 280, "sensor_grid": 280, "167": [280, 308], "plot_camera_project": [280, 308], "illustr": [281, 335, 339, 341], "estim": 281, "odometri": 281, "specif": [281, 298, 334, 341], "reconstruct": [281, 336], "depth": 281, "rgb": [281, 339], "os": [281, 291, 296, 306, 311, 318, 320, 324, 326, 331, 340], "ptr": [281, 287], "cycler": 281, "cycl": 281, "base_dir": [281, 291, 296, 306, 311, 318, 320, 324, 326, 331, 340], "test_data": [281, 291, 296, 306, 309, 311, 318, 320, 324, 326, 331, 340], "data_dir": [281, 291, 296, 306, 311, 318, 320, 324, 326, 331, 340], "search_path": [281, 291, 296, 306, 311, 318, 320, 324, 326, 331, 340], "dirnam": [281, 291, 296, 306, 311, 318, 320, 324, 326, 331, 340], "join": [281, 291, 296, 306, 311, 318, 320, 324, 326, 331, 340], "loadtxt": 281, "reconstruction_camera_matrix": 281, "csv": 281, "delimit": 281, "reconstruction_odometri": 281, "skiprow": 281, "quaternion_wxyz_from_xyzw": 281, "cam2world_trajectori": 281, "transforms_from_pq": 281, "1440": 281, "key_frames_indic": 281, "dtype": 281, "pos_min": 281, "pos_max": 281, "max": 281, "max_half_ext": 281, "110": [281, 293, 308], "40": [281, 294, 298], "171": [281, 308], "plot_camera_trajectori": [281, 308], "easili": [282, 335, 339, 342], "active_matrix_from_intrinsic_euler_xyz": [282, 284, 304, 340], "world2imag": 282, "0036": 282, "00367": 282, "00274": 282, "intrinsic_camera_matrix": 282, "101": [282, 310, 316], "image_grid": 282, "70": [282, 297, 301], "25": [282, 297, 304, 306, 309, 322, 340], "130": [282, 310, 322], "210": [282, 308], "plot_camera_with_imag": [282, 308], "collision_01": 283, "collision_02": 283, "collision_03": 283, "103": [283, 308, 310, 314], "active_matrix_from_intrinsic_euler_zyx": 284, "active_matrix_from_angl": [284, 285, 301], "unitx": 284, "uniti": 284, "unitz": 284, "hstack": [284, 304, 309, 340], "088": [284, 308], "plot_compare_rot": [284, 308], "proj3d": 285, "95": [285, 301], "wspace": 285, "hspace": 285, "setp": 285, "xlabel": 285, "ylabel": 285, "zlabel": 285, "rx45": 285, "deg2rad": [285, 294], "45": 285, "rz45": 285, "r_x": 285, "circ": 285, "r_z": 285, "r_": [285, 339, 343], "834": [285, 308], "plot_convention_rotation_global_loc": [285, 308], "42": [286, 297, 299, 313, 317], "069": [286, 308], "transpar": 287, "background": 287, "ppu": 287, "21": [287, 293, 297, 300, 339, 343], "pose1": 287, "random_transform": [287, 289, 295], "pose2": 287, "dual_quaternion_from_transform": 287, "stheta1": 287, "exponential_coordinates_from_transform": [287, 301], "stheta2": 287, "ground": 287, "truth": 287, "pose12pose2": 287, "invert_transform": 287, "screw_axis_from_exponential_coordin": [287, 318], "transform_from_exponential_coordin": [287, 298, 322], "interpolated_pos": 287, "interpolated_dq": 287, "newaxi": [287, 294, 301], "renorm": [287, 339, 343], "interpolated_poses_from_dq": 287, "transform_from_dual_quaternion": 287, "sclerp_interpolated_dq": 287, "dual_quaternion_sclerp": 287, "sclerp_interpolated_poses_from_dq": 287, "interpolated_ec": 287, "interpolates_poses_from_ec": 287, "transforms_from_exponential_coordin": [287, 301], "traj": 287, "traj_from_dq": 287, "traj_from_ec": 287, "traj_from_dqs_sclerp": 287, "legend": 287, "exp": 287, "336": [287, 308], "plot_dual_quaternion_interpol": [287, 308], "consecut": [288, 336], "beta": [288, 336, 338, 339], "gamma": [288, 336, 338, 339], "active_matrix_from_extrinsic_euler_xyz": 288, "062": [288, 308], "plot_euler_angl": [288, 308], "demonstr": [289, 301, 311], "sever": [289, 295, 297], "a2world": 289, "b2world": 289, "d2b": 289, "172": [289, 308], "plot_fram": [289, 308], "matrix_from_two_vector": 290, "random_vector": 290, "077": [290, 308], "plot_matrix_from_two_vector": [290, 308], "stl": [291, 306, 320, 326, 331, 340], "main": [291, 306, 309, 320, 326, 331, 340], "folder": [291, 306, 309, 320, 326, 331, 333, 340], "hard": [291, 306, 320, 326, 331, 340], "715": [291, 308], "easi": [292, 333, 339, 341, 342], "batch_rot": 292, "quaternion_slerp_batch": 292, "q_id": [292, 304, 340], "100000": 292, "co": [292, 294, 309, 324, 339, 341], "sin": [292, 294, 309, 326, 339, 341], "q_end": [292, 294], "329": [292, 308], "plot_pose_trajectori": [292, 308], "plot_quaternion_integr": [293, 308], "give": [294, 339, 341, 342, 343], "almost": 294, "signific": 294, "plai": 294, "end_angl": 294, "quaternion_from_matrix": 294, "1001": 294, "sigmoid": 294, "tanh": 294, "start_angl": 294, "350": 294, "r2_start": 294, "r2_end": 294, "q_start": 294, "y_slerp": 294, "naiv": 294, "239": [294, 308], "plot_quaternion_slerp": [294, 308], "translate_transform": [295, 318], "2823": 295, "box2origin": 295, "rand": 295, "cylinder2origin": 295, "ellipsoid2origin": 295, "capsule2origin": 295, "cone2origin": 295, "133": [295, 308], "plot_random_geometri": [295, 308], "dof": [296, 318, 324], "arm": [296, 318, 324], "robot_with_visu": [296, 318, 324], "open": [296, 306, 309, 311, 318, 324, 326, 331, 337, 340], "robot_urdf": [296, 318, 324], "read": [296, 306, 309, 311, 318, 324, 326, 331, 336, 338, 339, 340, 341, 342], "joint2": [296, 305, 318, 330], "joint3": [296, 305, 318, 330], "joint5": [296, 305, 318, 330], "joint6": [296, 305, 318, 330], "robot_arm": [296, 318, 324], "197": [296, 308], "plot_robot": [296, 308], "torqu": [297, 318], "tau": 297, "graviti": [297, 341], "dure": [297, 336, 339], "matrix_from_compact_axis_angl": 297, "inertia_of_cylind": 297, "i_xx": [297, 322], "i_yi": [297, 322], "i_zz": [297, 322], "p_xy": 297, "inv": [297, 322], "205": [297, 308], "plot_rotate_cylind": [297, 308], "encod": [298, 339, 343], "smaller": 298, "spiral": 298, "active_matrix_from_extrinsic_roll_pitch_yaw": 298, "plot_screw": [298, 308, 318], "screw_axis_from_screw_paramet": 298, "170": 298, "091": [298, 308], "059": [299, 308], "regular": 300, "were": 300, "meshgrid": [300, 309], "ones_lik": 300, "spherical_grid": 300, "column_stack": 300, "reshap": 300, "cartesian_grid": 300, "cartesian_from_spher": 300, "085": [300, 308], "plot_spherical_grid": [300, 308], "time_sc": 301, "t_max": 301, "asarrai": 301, "straight_line_path": 301, "50001": 301, "goal1": 301, "goal2": 301, "65": 301, "75": [301, 304, 340], "path1": 301, "path2": 301, "686": [301, 308], "plot_straight_line_path": [301, 308], "277": [302, 308], "c2a": 303, "pyrot": 303, "pytr": 303, "089": [303, 308], "plot_transform_concaten": [303, 308], "infer": [304, 340], "ee2robot": [304, 340], "cam2robot": [304, 340], "object2cam": [304, 340], "effector": [304, 340], "ee2object": [304, 340], "plot_transform_manag": [304, 308], "compi_urdf": [305, 330], "compi": [305, 330], "linkmount": [305, 330], "link1": [305, 330], "link2": [305, 330], "link3": [305, 330], "link4": [305, 330], "link5": [305, 330], "link6": [305, 330], "tcp": [305, 318, 330], "joint1": [305, 330], "158": [305, 330], "570796": [305, 330], "28": [305, 330], "joint4": [305, 330], "34": [305, 330], "346": [305, 330], "jointtcp": [305, 330], "joint_angl": [305, 330], "125": [305, 308], "plot_urdf": [305, 308], "simple_mechan": [306, 309, 311, 326, 331, 340], "lower_con": [306, 309, 311, 326, 331, 340], "upper_con": [306, 311, 331, 340], "147": [306, 308], "plot_urdf_with_mesh": [306, 308], "073": [307, 308, 310, 321], "08": 308, "543": 308, "_auto_examples_plot": 308, "pyrend": 309, "github": [309, 337], "mmatl": 309, "pip": 309, "sure": 309, "abl": 309, "too": 309, "chang": [309, 339, 341], "readm": [309, 337], "command": 309, "viewer": [309, 320], "try": [309, 341], "exit": 309, "show_urdf_transform_manag": 309, "scene": 309, "hasattr": 309, "_add_object": 309, "_add_fram": 309, "use_raymond_light": 309, "obj": 309, "axis_mesh": 309, "from_trimesh": 309, "creation": 309, "origin_s": 309, "axis_radiu": 309, "axis_length": 309, "add_nod": 309, "modifi": [309, 334], "box_show": 309, "corner": 309, "vertic": 309, "face": 309, "bounding_box": 309, "sphere_show": 309, "mgrid": 309, "100j": 309, "j": [309, 339, 341, 343], "v1": 309, "v2": 309, "v3": 309, "extend": [309, 325, 339], "cylinder_show": 309, "axis_start": 309, "axis_end": 309, "not_axi": 309, "n1": 309, "n2": 309, "mesh_show": 309, "own": 309, "directori": 309, "render_urdf": [309, 310], "03": [310, 339], "372": 310, "_auto_examples_visu": 310, "vis_spher": [310, 329], "620": [310, 329], "vis_scatt": [310, 328], "243": [310, 328], "vis_moving_robot": [310, 324], "225": [310, 324], "vis_urdf": [310, 330], "vis_ee_wrench": [310, 318], "177": [310, 318], "vis_moving_trajectori": [310, 325], "139": [310, 325], "vis_moving_cylinder_with_wrench": [310, 322], "vis_add_remove_artist": [310, 311], "127": [310, 311, 320], "vis_mesh": [310, 320], "vis_moving_lin": [310, 323], "126": [310, 323], "vis_urdf_with_mesh": [310, 331], "123": [310, 331], "vis_cylind": [310, 317], "vis_plan": [310, 327], "118": [310, 327], "vis_moving_urdf_with_mesh": [310, 326], "vis_capsul": [310, 315], "113": [310, 315], "vis_ellipsoid": [310, 319], "112": [310, 319], "vis_box": [310, 313], "vis_basi": [310, 312], "109": [310, 312], "vis_camera_3d": [310, 314], "vis_con": [310, 316], "vis_vector": [310, 332], "082": [310, 332], "vis_moving_basi": [310, 321], "pv": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "again": [311, 343], "__file__": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "__open3d_rendered_imag": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "jpg": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "forc": 318, "tool": [318, 341], "Then": 318, "configur": 318, "instantan": 318, "would": [318, 335, 337, 340], "vector_project": 318, "perpendicular_to_vector": 318, "slerp_weight": 318, "check_screw_paramet": 318, "vector_to_point": [318, 342], "vector_to_direct": 318, "vectors_to_point": 318, "origin_projected_on_screw_axi": 318, "pure_transl": 318, "isinf": 318, "screw_axis_to_old_fram": 318, "screw_axis_to_rotated_fram": 318, "screw_axis_to_translated_fram": 318, "t1": 318, "t2": 318, "w1": 318, "w2": 318, "02": [318, 339], "q_plus_s_axi": 318, "arc_bound": 318, "ee2bas": 318, "base2e": 318, "wrench_in_e": 318, "81": 318, "wrench_in_bas": 318, "adjoint_from_transform": 318, "mass2bas": 318, "075": 318, "025": 318, "screw_parameters_from_screw_axi": 318, "press": 320, "help": [320, 342], "messag": 320, "stdout": 320, "scan": 320, "animation_callback": [321, 322, 323, 324, 326], "bodi": [322, 339, 341, 343], "final": 322, "spatial_inertia_of_cylind": 322, "cylinder_fram": 322, "prev_cylinder2world": 322, "stheta_dot": 322, "inertia_inv": 322, "reset": 322, "wrench_in_cylind": 322, "001": 322, "0005": 322, "stheta_ddot": 322, "cylinder2world": 322, "10000": 322, "99": 323, "view": [325, 335, 341], "79253": 326, "8853": 327, "41": 328, "page": [333, 338], "hire": [333, 335, 336, 339, 340, 341, 343], "public": [334, 337], "sake": 334, "breviti": 334, "se": [334, 337], "magnitud": 334, "400": 334, "model": [335, 337], "light": 335, "mirror": 335, "fulli": 335, "up": [335, 341], "field": 335, "ccc": [335, 339, 341], "f_x": 335, "c_x": 335, "f_y": 335, "c_y": 335, "intuit": 336, "specifi": [336, 341], "proper": 336, "distinguish": 336, "As": 336, "increas": 336, "amount": 336, "reason": [336, 343], "restrict": 336, "leq": 336, "frac": [336, 339], "special": [336, 339, 343], "occur": [336, 341], "exactli": [336, 339, 341, 343], "opposit": 336, "even": 336, "though": 336, "sometim": [336, 339, 340, 341, 343], "content": [337, 339], "notat": [337, 339, 342], "api": [337, 341, 343], "group": [337, 339, 343], "instruct": 337, "explain": [337, 341], "scientif": 337, "appreci": 337, "paper": [337, 339], "fabisch": 337, "2019": 337, "journal": 337, "softwar": 337, "33": [337, 339, 343], "1159": 337, "physic": [338, 341], "quantiti": 338, "bc": [338, 339], "ap": 338, "overview": [338, 339, 340, 343], "tabl": [338, 339], "mathemat": [338, 342], "symbol": 338, "pmb": [338, 339], "interpret": [338, 339, 341], "our": [338, 339], "good": 338, "bad": 338, "ugli": 338, "slide": 338, "static": 338, "squarespac": 338, "523c5c56e4b0abc2df5e163": 338, "53957839e4b05045ad65021d": 338, "1402304569659": 338, "workshop": 338, "rotations_v102": 338, "blog": 338, "paulfurgal": 338, "info": 338, "2014": 338, "minimum": 339, "redund": 339, "free": 339, "singular": 339, "now": [339, 341, 342], "look": [339, 341, 342], "compet": 339, "Not": 339, "bracket": 339, "ye": 339, "One": [339, 343], "most": [339, 342, 343], "practic": 339, "13": [339, 343], "22": [339, 343], "23": [339, 343], "31": [339, 343], "32": [339, 343], "minim": [339, 343], "freedom": 339, "matrix_from_angl": [339, 341], "matrix_from_euler_xyz": [339, 341], "matrix_from_euler_zyx": [339, 341], "kept": [339, 341], "backward": [339, 341], "compat": [339, 341], "doubt": [339, 341], "docstr": [339, 341], "clearli": [339, 341], "pre": 339, "side": [339, 341], "post": 339, "abb": 339, "ac": [339, 341], "r_1": [339, 341], "r_2": [339, 341], "term": [339, 341], "local": [339, 341], "pro": 339, "con": 339, "everi": 339, "3x3": [339, 343], "simpli": 339, "optim": 339, "expens": 339, "entri": 339, "fourth": 339, "ddot": 339, "do": [339, 341], "wise": 339, "differenti": 339, "subset": 339, "lie": [339, 343], "algebra": [339, 341, 343], "replac": 339, "discontinu": 339, "consid": 339, "involv": 339, "imaginari": [339, 341], "ijk": 339, "shuster": 339, "jpl": 339, "nasa": 339, "jet": 339, "propuls": 339, "laboratori": 339, "why": 339, "section": [339, 343], "vi": 339, "hint": 339, "identifi": 339, "To": 339, "four": 339, "versor": 339, "less": 339, "suscept": 339, "vari": 339, "over": 339, "avoid": 339, "jump": 339, "inher": 339, "parameter": 339, "trigonometr": 339, "cheaper": 339, "cheap": 339, "straightforward": 339, "complet": [339, 343], "24": 339, "gimbal": 339, "lock": 339, "veri": [339, 340], "concept": 339, "build": 339, "b_": 339, "yz": 339, "zx": 339, "xy": 339, "hand": 339, "organ": 339, "quaterion": 339, "flip": 339, "arxiv": 339, "org": [339, 343], "1801": 339, "07478": 339, "kindr": 339, "cheat": 339, "sheet": 339, "doc": 339, "leggedrobot": 339, "cheatsheet_latest": 339, "let": 339, "engin": [339, 341], "marctenbosch": 339, "applic": 339, "mrao": 339, "cam": 339, "uk": [339, 341], "wp": 339, "upload": 339, "2015": 339, "01applicationsi": 339, "variat": 339, "doi": 339, "1016": 339, "mechmachtheori": 339, "004": 339, "difficult": 340, "observ": 340, "handl": 340, "export": 340, "underli": 340, "structur": 340, "subclass": 340, "align": 341, "come": 341, "finger": 341, "attach": 341, "thumb": 341, "handedleft": 341, "absenc": 341, "mathematician": 341, "physicist": 341, "roboticist": 341, "solid": 341, "dash": 341, "stai": 341, "activepass": 341, "vice": 341, "versa": 341, "counter": 341, "clockwis": 341, "Its": 341, "selig": 341, "versu": 341, "2006": 341, "ieee": 341, "autom": 341, "magazin": 341, "openresearch": 341, "lsbu": 341, "641fa36d365e0244b27dd2fc8b881a12061afe1eb5c3952bae15614d3d831710": 341, "185181": 341, "01598057": 341, "henc": 341, "achiev": 341, "effect": 341, "problem": 341, "particularli": [341, 343], "deal": 341, "tell": 341, "ship": 341, "surg": 341, "swai": 341, "heav": 341, "aircraft": 341, "bank": 341, "mount": 341, "pan": 341, "tilt": 341, "perfectli": 341, "incomplet": 341, "divers": 341, "graphic": 341, "extern": 341, "xsen": 341, "mvnx": 341, "captur": 341, "west": 341, "nwu": 341, "subject": 341, "stand": 341, "bullet": 341, "getquaternionfromeul": 341, "pybullet": 341, "eigen": 341, "constructor": 341, "peter": 341, "cork": 341, "toolbox": 341, "rep103": 341, "forward": 341, "east": 341, "enu": 341, "optic": 341, "suffix": 341, "topic": 341, "tag": 341, "discourag": 341, "posestamp": 341, "frame_id": 341, "transformstamp": 341, "univers": 341, "With": 342, "keep": 342, "track": 342, "trick": 342, "correct": 342, "sens": 342, "t_": [342, 343], "recogn": 342, "ca": 342, "cb": 342, "_c": 342, "prefer": 342, "verifi": 342, "p_in_a": 342, "p_in_c": 342, "rigid": 343, "those": 343, "analog": 343, "conveni": 343, "4x4": 343, "t_1": 343, "t_2": 343, "t_3": 343, "partit": 343, "corrspond": 343, "deactiv": 343, "By": 343, "spatial": 343, "similarli": 343, "effici": 343, "lynch": 343, "park": 343, "modern": 343, "hade": 343, "mech": 343, "northwestern": 343, "php": 343, "modern_robot": 343, "wikipedia": 343, "en": 343, "wiki": 343, "dual_quaternion": 343, "yan": 343, "bin": 343, "jia": 343, "ben": 343, "kenwright": 343, "beginn": 343, "guid": 343, "wscg": 343, "zcu": 343, "cz": 343, "wscg2012": 343, "_wscg2012": 343, "commun": 343}, "objects": {"pytransform3d": [[334, 0, 0, "-", "batch_rotations"], [334, 0, 0, "-", "camera"], [334, 0, 0, "-", "coordinates"], [334, 0, 0, "-", "editor"], [334, 0, 0, "-", "plot_utils"], [334, 0, 0, "-", "rotations"], [334, 0, 0, "-", "trajectories"], [334, 0, 0, "-", "transform_manager"], [334, 0, 0, "-", "transformations"], [334, 0, 0, "-", "urdf"], [334, 0, 0, "-", "visualizer"]], "pytransform3d.batch_rotations": [[0, 1, 1, "", "active_matrices_from_angles"], [1, 1, 1, "", "active_matrices_from_extrinsic_euler_angles"], [2, 1, 1, "", "active_matrices_from_intrinsic_euler_angles"], [3, 1, 1, "", "angles_between_vectors"], [4, 1, 1, "", "axis_angles_from_matrices"], [5, 1, 1, "", "batch_concatenate_quaternions"], [6, 1, 1, "", "batch_q_conj"], [7, 1, 1, "", "batch_quaternion_wxyz_from_xyzw"], [8, 1, 1, "", "batch_quaternion_xyzw_from_wxyz"], [9, 1, 1, "", "cross_product_matrices"], [10, 1, 1, "", "matrices_from_compact_axis_angles"], [11, 1, 1, "", "matrices_from_quaternions"], [12, 1, 1, "", "norm_vectors"], [13, 1, 1, "", "quaternion_slerp_batch"], [14, 1, 1, "", "quaternions_from_matrices"], [15, 1, 1, "", "smooth_quaternion_trajectory"]], "pytransform3d.camera": [[16, 1, 1, "", "cam2sensor"], [17, 1, 1, "", "make_world_grid"], [18, 1, 1, "", "make_world_line"], [19, 1, 1, "", "plot_camera"], [20, 1, 1, "", "sensor2img"], [21, 1, 1, "", "world2image"]], "pytransform3d.coordinates": [[22, 1, 1, "", "cartesian_from_cylindrical"], [23, 1, 1, "", "cartesian_from_spherical"], [24, 1, 1, "", "cylindrical_from_cartesian"], [25, 1, 1, "", "cylindrical_from_spherical"], [26, 1, 1, "", "spherical_from_cartesian"], [27, 1, 1, "", "spherical_from_cylindrical"]], "pytransform3d.editor": [[28, 2, 1, "", "TransformEditor"]], "pytransform3d.editor.TransformEditor": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "show"]], "pytransform3d.plot_utils": [[29, 2, 1, "", "Arrow3D"], [30, 2, 1, "", "Frame"], [31, 2, 1, "", "LabeledFrame"], [32, 2, 1, "", "Trajectory"], [33, 1, 1, "", "make_3d_axis"], [34, 1, 1, "", "plot_box"], [35, 1, 1, "", "plot_capsule"], [36, 1, 1, "", "plot_cone"], [37, 1, 1, "", "plot_cylinder"], [38, 1, 1, "", "plot_ellipsoid"], [39, 1, 1, "", "plot_length_variable"], [40, 1, 1, "", "plot_mesh"], [41, 1, 1, "", "plot_sphere"], [42, 1, 1, "", "plot_vector"], [43, 1, 1, "", "remove_frame"]], "pytransform3d.plot_utils.Arrow3D": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "draw"], [29, 3, 1, "", "set"], [29, 3, 1, "", "set_data"]], "pytransform3d.plot_utils.Frame": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "add_frame"], [30, 3, 1, "", "draw"], [30, 3, 1, "", "set"], [30, 3, 1, "", "set_data"]], "pytransform3d.plot_utils.LabeledFrame": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "add_frame"], [31, 3, 1, "", "draw"], [31, 3, 1, "", "set"], [31, 3, 1, "", "set_data"]], "pytransform3d.plot_utils.Trajectory": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "add_trajectory"], [32, 3, 1, "", "draw"], [32, 3, 1, "", "set"], [32, 3, 1, "", "set_data"]], "pytransform3d.rotations": [[44, 1, 1, "", "active_matrix_from_angle"], [45, 1, 1, "", "active_matrix_from_extrinsic_euler_xyx"], [46, 1, 1, "", "active_matrix_from_extrinsic_euler_xyz"], [47, 1, 1, "", "active_matrix_from_extrinsic_euler_xzx"], [48, 1, 1, "", "active_matrix_from_extrinsic_euler_xzy"], [49, 1, 1, "", "active_matrix_from_extrinsic_euler_yxy"], [50, 1, 1, "", "active_matrix_from_extrinsic_euler_yxz"], [51, 1, 1, "", "active_matrix_from_extrinsic_euler_yzx"], [52, 1, 1, "", "active_matrix_from_extrinsic_euler_yzy"], [53, 1, 1, "", "active_matrix_from_extrinsic_euler_zxy"], [54, 1, 1, "", "active_matrix_from_extrinsic_euler_zxz"], [55, 1, 1, "", "active_matrix_from_extrinsic_euler_zyx"], [56, 1, 1, "", "active_matrix_from_extrinsic_euler_zyz"], [57, 1, 1, "", "active_matrix_from_extrinsic_roll_pitch_yaw"], [58, 1, 1, "", "active_matrix_from_intrinsic_euler_xyx"], [59, 1, 1, "", "active_matrix_from_intrinsic_euler_xyz"], [60, 1, 1, "", "active_matrix_from_intrinsic_euler_xzx"], [61, 1, 1, "", "active_matrix_from_intrinsic_euler_xzy"], [62, 1, 1, "", "active_matrix_from_intrinsic_euler_yxy"], [63, 1, 1, "", "active_matrix_from_intrinsic_euler_yxz"], [64, 1, 1, "", "active_matrix_from_intrinsic_euler_yzx"], [65, 1, 1, "", "active_matrix_from_intrinsic_euler_yzy"], [66, 1, 1, "", "active_matrix_from_intrinsic_euler_zxy"], [67, 1, 1, "", "active_matrix_from_intrinsic_euler_zxz"], [68, 1, 1, "", "active_matrix_from_intrinsic_euler_zyx"], [69, 1, 1, "", "active_matrix_from_intrinsic_euler_zyz"], [70, 1, 1, "", "angle_between_vectors"], [71, 1, 1, "", "assert_axis_angle_equal"], [72, 1, 1, "", "assert_compact_axis_angle_equal"], [73, 1, 1, "", "assert_euler_xyz_equal"], [74, 1, 1, "", "assert_euler_zyx_equal"], [75, 1, 1, "", "assert_quaternion_equal"], [76, 1, 1, "", "assert_rotation_matrix"], [77, 1, 1, "", "axis_angle_from_compact_axis_angle"], [78, 1, 1, "", "axis_angle_from_matrix"], [79, 1, 1, "", "axis_angle_from_quaternion"], [80, 1, 1, "", "axis_angle_from_two_directions"], [81, 1, 1, "", "axis_angle_slerp"], [82, 1, 1, "", "check_axis_angle"], [83, 1, 1, "", "check_compact_axis_angle"], [84, 1, 1, "", "check_matrix"], [85, 1, 1, "", "check_quaternion"], [86, 1, 1, "", "check_quaternions"], [87, 1, 1, "", "check_rotor"], [88, 1, 1, "", "check_skew_symmetric_matrix"], [89, 1, 1, "", "compact_axis_angle"], [90, 1, 1, "", "compact_axis_angle_from_matrix"], [91, 1, 1, "", "compact_axis_angle_from_quaternion"], [92, 1, 1, "", "concatenate_quaternions"], [93, 1, 1, "", "concatenate_rotors"], [94, 1, 1, "", "cross_product_matrix"], [95, 1, 1, "", "euler_xyz_from_matrix"], [96, 1, 1, "", "euler_zyx_from_matrix"], [97, 1, 1, "", "extrinsic_euler_xyx_from_active_matrix"], [98, 1, 1, "", "extrinsic_euler_xyz_from_active_matrix"], [99, 1, 1, "", "extrinsic_euler_xzx_from_active_matrix"], [100, 1, 1, "", "extrinsic_euler_xzy_from_active_matrix"], [101, 1, 1, "", "extrinsic_euler_yxy_from_active_matrix"], [102, 1, 1, "", "extrinsic_euler_yxz_from_active_matrix"], [103, 1, 1, "", "extrinsic_euler_yzx_from_active_matrix"], [104, 1, 1, "", "extrinsic_euler_yzy_from_active_matrix"], [105, 1, 1, "", "extrinsic_euler_zxy_from_active_matrix"], [106, 1, 1, "", "extrinsic_euler_zxz_from_active_matrix"], [107, 1, 1, "", "extrinsic_euler_zyx_from_active_matrix"], [108, 1, 1, "", "extrinsic_euler_zyz_from_active_matrix"], [109, 1, 1, "", "geometric_product"], [110, 1, 1, "", "intrinsic_euler_xyx_from_active_matrix"], [111, 1, 1, "", "intrinsic_euler_xyz_from_active_matrix"], [112, 1, 1, "", "intrinsic_euler_xzx_from_active_matrix"], [113, 1, 1, "", "intrinsic_euler_xzy_from_active_matrix"], [114, 1, 1, "", "intrinsic_euler_yxy_from_active_matrix"], [115, 1, 1, "", "intrinsic_euler_yxz_from_active_matrix"], [116, 1, 1, "", "intrinsic_euler_yzx_from_active_matrix"], [117, 1, 1, "", "intrinsic_euler_yzy_from_active_matrix"], [118, 1, 1, "", "intrinsic_euler_zxy_from_active_matrix"], [119, 1, 1, "", "intrinsic_euler_zxz_from_active_matrix"], [120, 1, 1, "", "intrinsic_euler_zyx_from_active_matrix"], [121, 1, 1, "", "intrinsic_euler_zyz_from_active_matrix"], [122, 1, 1, "", "matrix_from"], [123, 1, 1, "", "matrix_from_angle"], [124, 1, 1, "", "matrix_from_axis_angle"], [125, 1, 1, "", "matrix_from_compact_axis_angle"], [126, 1, 1, "", "matrix_from_euler_xyz"], [127, 1, 1, "", "matrix_from_euler_zyx"], [128, 1, 1, "", "matrix_from_quaternion"], [129, 1, 1, "", "matrix_from_rotor"], [130, 1, 1, "", "matrix_from_two_vectors"], [131, 1, 1, "", "norm_angle"], [132, 1, 1, "", "norm_axis_angle"], [133, 1, 1, "", "norm_compact_axis_angle"], [134, 1, 1, "", "norm_matrix"], [135, 1, 1, "", "norm_vector"], [136, 1, 1, "", "passive_matrix_from_angle"], [137, 1, 1, "", "perpendicular_to_vectors"], [138, 1, 1, "", "pick_closest_quaternion"], [139, 1, 1, "", "plane_basis_from_normal"], [140, 1, 1, "", "plane_normal_from_bivector"], [141, 1, 1, "", "plot_axis_angle"], [142, 1, 1, "", "plot_basis"], [143, 1, 1, "", "plot_bivector"], [144, 1, 1, "", "q_conj"], [145, 1, 1, "", "q_prod_vector"], [146, 1, 1, "", "quaternion_diff"], [147, 1, 1, "", "quaternion_dist"], [148, 1, 1, "", "quaternion_from_axis_angle"], [149, 1, 1, "", "quaternion_from_compact_axis_angle"], [150, 1, 1, "", "quaternion_from_matrix"], [151, 1, 1, "", "quaternion_gradient"], [152, 1, 1, "", "quaternion_integrate"], [153, 1, 1, "", "quaternion_slerp"], [154, 1, 1, "", "quaternion_wxyz_from_xyzw"], [155, 1, 1, "", "quaternion_xyzw_from_wxyz"], [156, 1, 1, "", "random_axis_angle"], [157, 1, 1, "", "random_compact_axis_angle"], [158, 1, 1, "", "random_quaternion"], [159, 1, 1, "", "random_vector"], [160, 1, 1, "", "rotor_apply"], [161, 1, 1, "", "rotor_from_plane_angle"], [162, 1, 1, "", "rotor_from_two_directions"], [163, 1, 1, "", "rotor_reverse"], [164, 1, 1, "", "rotor_slerp"], [165, 1, 1, "", "vector_projection"], [166, 1, 1, "", "wedge"]], "pytransform3d.trajectories": [[167, 1, 1, "", "batch_concatenate_dual_quaternions"], [168, 1, 1, "", "batch_dq_conj"], [169, 1, 1, "", "batch_dq_prod_vector"], [170, 1, 1, "", "concat_many_to_one"], [171, 1, 1, "", "concat_one_to_many"], [172, 1, 1, "", "dual_quaternions_from_pqs"], [173, 1, 1, "", "exponential_coordinates_from_transforms"], [174, 1, 1, "", "invert_transforms"], [175, 1, 1, "", "mirror_screw_axis_direction"], [176, 1, 1, "", "plot_trajectory"], [177, 1, 1, "", "pqs_from_dual_quaternions"], [178, 1, 1, "", "pqs_from_transforms"], [179, 1, 1, "", "transforms_from_exponential_coordinates"], [180, 1, 1, "", "transforms_from_pqs"]], "pytransform3d.transform_manager": [[181, 2, 1, "", "TransformManager"]], "pytransform3d.transform_manager.TransformManager": [[181, 3, 1, "", "__init__"], [181, 3, 1, "", "add_transform"], [181, 3, 1, "", "check_consistency"], [181, 3, 1, "", "connected_components"], [181, 3, 1, "", "get_transform"], [181, 3, 1, "", "has_frame"], [181, 3, 1, "", "plot_connections_in"], [181, 3, 1, "", "plot_frames_in"], [181, 3, 1, "", "remove_transform"], [181, 3, 1, "", "write_png"]], "pytransform3d.transformations": [[182, 1, 1, "", "adjoint_from_transform"], [183, 1, 1, "", "assert_screw_parameters_equal"], [184, 1, 1, "", "assert_transform"], [185, 1, 1, "", "assert_unit_dual_quaternion"], [186, 1, 1, "", "assert_unit_dual_quaternion_equal"], [187, 1, 1, "", "check_dual_quaternion"], [188, 1, 1, "", "check_exponential_coordinates"], [189, 1, 1, "", "check_pq"], [190, 1, 1, "", "check_screw_axis"], [191, 1, 1, "", "check_screw_matrix"], [192, 1, 1, "", "check_screw_parameters"], [193, 1, 1, "", "check_transform"], [194, 1, 1, "", "check_transform_log"], [195, 1, 1, "", "concat"], [196, 1, 1, "", "concatenate_dual_quaternions"], [197, 1, 1, "", "dq_conj"], [198, 1, 1, "", "dq_prod_vector"], [199, 1, 1, "", "dq_q_conj"], [200, 1, 1, "", "dual_quaternion_from_pq"], [201, 1, 1, "", "dual_quaternion_from_screw_parameters"], [202, 1, 1, "", "dual_quaternion_from_transform"], [203, 1, 1, "", "dual_quaternion_power"], [204, 1, 1, "", "dual_quaternion_sclerp"], [205, 1, 1, "", "exponential_coordinates_from_screw_axis"], [206, 1, 1, "", "exponential_coordinates_from_transform"], [207, 1, 1, "", "exponential_coordinates_from_transform_log"], [208, 1, 1, "", "invert_transform"], [209, 1, 1, "", "norm_exponential_coordinates"], [210, 1, 1, "", "plot_screw"], [211, 1, 1, "", "plot_transform"], [212, 1, 1, "", "pq_from_dual_quaternion"], [213, 1, 1, "", "pq_from_transform"], [214, 1, 1, "", "random_screw_axis"], [215, 1, 1, "", "random_transform"], [216, 1, 1, "", "rotate_transform"], [217, 1, 1, "", "scale_transform"], [218, 1, 1, "", "screw_axis_from_exponential_coordinates"], [219, 1, 1, "", "screw_axis_from_screw_matrix"], [220, 1, 1, "", "screw_axis_from_screw_parameters"], [221, 1, 1, "", "screw_matrix_from_screw_axis"], [222, 1, 1, "", "screw_matrix_from_transform_log"], [223, 1, 1, "", "screw_parameters_from_dual_quaternion"], [224, 1, 1, "", "screw_parameters_from_screw_axis"], [225, 1, 1, "", "transform"], [226, 1, 1, "", "transform_from"], [227, 1, 1, "", "transform_from_dual_quaternion"], [228, 1, 1, "", "transform_from_exponential_coordinates"], [229, 1, 1, "", "transform_from_pq"], [230, 1, 1, "", "transform_from_transform_log"], [231, 1, 1, "", "transform_log_from_exponential_coordinates"], [232, 1, 1, "", "transform_log_from_screw_matrix"], [233, 1, 1, "", "transform_log_from_transform"], [234, 1, 1, "", "translate_transform"], [235, 1, 1, "", "vector_to_direction"], [236, 1, 1, "", "vector_to_point"], [237, 1, 1, "", "vectors_to_directions"], [238, 1, 1, "", "vectors_to_points"]], "pytransform3d.urdf": [[239, 2, 1, "", "Box"], [240, 2, 1, "", "Cylinder"], [241, 2, 1, "", "Geometry"], [242, 2, 1, "", "Joint"], [243, 2, 1, "", "Link"], [244, 2, 1, "", "Mesh"], [245, 2, 1, "", "Sphere"], [246, 2, 1, "", "UrdfTransformManager"], [247, 1, 1, "", "initialize_urdf_transform_manager"], [248, 1, 1, "", "parse_urdf"]], "pytransform3d.urdf.Box": [[239, 3, 1, "", "__init__"], [239, 3, 1, "", "parse"], [239, 3, 1, "", "plot"]], "pytransform3d.urdf.Cylinder": [[240, 3, 1, "", "__init__"], [240, 3, 1, "", "parse"], [240, 3, 1, "", "plot"]], "pytransform3d.urdf.Geometry": [[241, 3, 1, "", "__init__"], [241, 3, 1, "", "parse"], [241, 3, 1, "", "plot"]], "pytransform3d.urdf.Joint": [[242, 3, 1, "", "__init__"]], "pytransform3d.urdf.Link": [[243, 3, 1, "", "__init__"]], "pytransform3d.urdf.Mesh": [[244, 3, 1, "", "__init__"], [244, 3, 1, "", "parse"], [244, 3, 1, "", "plot"]], "pytransform3d.urdf.Sphere": [[245, 3, 1, "", "__init__"], [245, 3, 1, "", "parse"], [245, 3, 1, "", "plot"]], "pytransform3d.urdf.UrdfTransformManager": [[246, 3, 1, "", "__init__"], [246, 3, 1, "", "add_joint"], [246, 3, 1, "", "add_transform"], [246, 3, 1, "", "check_consistency"], [246, 3, 1, "", "connected_components"], [246, 3, 1, "", "get_joint_limits"], [246, 3, 1, "", "get_transform"], [246, 3, 1, "", "has_frame"], [246, 3, 1, "", "load_urdf"], [246, 3, 1, "", "plot_collision_objects"], [246, 3, 1, "", "plot_connections_in"], [246, 3, 1, "", "plot_frames_in"], [246, 3, 1, "", "plot_visuals"], [246, 3, 1, "", "remove_transform"], [246, 3, 1, "", "set_joint"], [246, 3, 1, "", "write_png"]], "pytransform3d.visualizer": [[249, 2, 1, "", "Artist"], [250, 2, 1, "", "Box"], [251, 2, 1, "", "Camera"], [252, 2, 1, "", "Capsule"], [253, 2, 1, "", "Cone"], [254, 2, 1, "", "Cylinder"], [255, 2, 1, "", "Ellipsoid"], [256, 2, 1, "", "Figure"], [257, 2, 1, "", "Frame"], [258, 2, 1, "", "Graph"], [259, 2, 1, "", "Line3D"], [260, 2, 1, "", "Mesh"], [261, 2, 1, "", "Plane"], [262, 2, 1, "", "PointCollection3D"], [263, 2, 1, "", "Sphere"], [264, 2, 1, "", "Trajectory"], [265, 2, 1, "", "Vector3D"], [266, 1, 1, "", "figure"]], "pytransform3d.visualizer.Artist": [[249, 3, 1, "", "__init__"], [249, 3, 1, "", "add_artist"], [249, 4, 1, "", "geometries"]], "pytransform3d.visualizer.Box": [[250, 3, 1, "", "__init__"], [250, 3, 1, "", "add_artist"], [250, 4, 1, "", "geometries"], [250, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Camera": [[251, 3, 1, "", "__init__"], [251, 3, 1, "", "add_artist"], [251, 4, 1, "", "geometries"], [251, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Capsule": [[252, 3, 1, "", "__init__"], [252, 3, 1, "", "add_artist"], [252, 4, 1, "", "geometries"], [252, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Cone": [[253, 3, 1, "", "__init__"], [253, 3, 1, "", "add_artist"], [253, 4, 1, "", "geometries"], [253, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Cylinder": [[254, 3, 1, "", "__init__"], [254, 3, 1, "", "add_artist"], [254, 4, 1, "", "geometries"], [254, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Ellipsoid": [[255, 3, 1, "", "__init__"], [255, 3, 1, "", "add_artist"], [255, 4, 1, "", "geometries"], [255, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Figure": [[256, 3, 1, "", "__init__"], [256, 3, 1, "", "add_geometry"], [256, 3, 1, "", "animate"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_basis"], [256, 3, 1, "", "plot_box"], [256, 3, 1, "", "plot_camera"], [256, 3, 1, "", "plot_capsule"], [256, 3, 1, "", "plot_cone"], [256, 3, 1, "", "plot_cylinder"], [256, 3, 1, "", "plot_ellipsoid"], [256, 3, 1, "", "plot_graph"], [256, 3, 1, "", "plot_mesh"], [256, 3, 1, "", "plot_plane"], [256, 3, 1, "", "plot_sphere"], [256, 3, 1, "", "plot_trajectory"], [256, 3, 1, "", "plot_transform"], [256, 3, 1, "", "plot_vector"], [256, 3, 1, "", "remove_artist"], [256, 3, 1, "", "save_image"], [256, 3, 1, "", "scatter"], [256, 3, 1, "", "set_line_width"], [256, 3, 1, "", "set_zoom"], [256, 3, 1, "", "show"], [256, 3, 1, "", "update_geometry"], [256, 3, 1, "", "view_init"]], "pytransform3d.visualizer.Frame": [[257, 3, 1, "", "__init__"], [257, 3, 1, "", "add_artist"], [257, 4, 1, "", "geometries"], [257, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Graph": [[258, 3, 1, "", "__init__"], [258, 3, 1, "", "add_artist"], [258, 4, 1, "", "geometries"], [258, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Line3D": [[259, 3, 1, "", "__init__"], [259, 3, 1, "", "add_artist"], [259, 4, 1, "", "geometries"], [259, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Mesh": [[260, 3, 1, "", "__init__"], [260, 3, 1, "", "add_artist"], [260, 4, 1, "", "geometries"], [260, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Plane": [[261, 3, 1, "", "__init__"], [261, 3, 1, "", "add_artist"], [261, 4, 1, "", "geometries"], [261, 3, 1, "", "set_data"]], "pytransform3d.visualizer.PointCollection3D": [[262, 3, 1, "", "__init__"], [262, 3, 1, "", "add_artist"], [262, 4, 1, "", "geometries"], [262, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Sphere": [[263, 3, 1, "", "__init__"], [263, 3, 1, "", "add_artist"], [263, 4, 1, "", "geometries"], [263, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Trajectory": [[264, 3, 1, "", "__init__"], [264, 3, 1, "", "add_artist"], [264, 4, 1, "", "geometries"], [264, 3, 1, "", "set_data"]], "pytransform3d.visualizer.Vector3D": [[265, 3, 1, "", "__init__"], [265, 3, 1, "", "add_artist"], [265, 4, 1, "", "geometries"], [265, 3, 1, "", "set_data"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"pytransform3d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 334, 337], "batch_rot": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 334], "active_matrices_from_angl": 0, "active_matrices_from_extrinsic_euler_angl": 1, "active_matrices_from_intrinsic_euler_angl": 2, "angles_between_vector": 3, "axis_angles_from_matric": 4, "batch_concatenate_quaternion": 5, "batch_q_conj": 6, "batch_quaternion_wxyz_from_xyzw": 7, "batch_quaternion_xyzw_from_wxyz": 8, "cross_product_matric": 9, "matrices_from_compact_axis_angl": 10, "matrices_from_quaternion": 11, "norm_vector": [12, 135], "quaternion_slerp_batch": 13, "exampl": [13, 16, 17, 19, 20, 21, 23, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 57, 59, 68, 70, 80, 81, 124, 125, 128, 130, 135, 136, 137, 141, 142, 143, 148, 150, 152, 153, 154, 156, 157, 158, 159, 165, 176, 179, 180, 181, 182, 192, 195, 202, 204, 206, 208, 210, 211, 215, 218, 220, 224, 225, 226, 227, 228, 229, 234, 235, 236, 238, 246, 249, 250, 254, 256, 257, 258, 259, 263, 264, 266, 274, 336], "us": [13, 16, 17, 19, 20, 21, 23, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 57, 59, 68, 70, 80, 81, 124, 125, 128, 130, 135, 136, 137, 141, 142, 143, 148, 150, 152, 153, 154, 156, 157, 158, 159, 165, 176, 179, 180, 181, 182, 192, 195, 202, 204, 206, 208, 210, 211, 215, 218, 220, 224, 225, 226, 227, 228, 229, 234, 235, 236, 238, 246, 249, 250, 254, 256, 257, 258, 259, 263, 264, 266], "quaternions_from_matric": 14, "smooth_quaternion_trajectori": 15, "camera": [16, 17, 18, 19, 20, 21, 251, 279, 280, 281, 282, 314, 334, 335], "cam2sensor": 16, "make_world_grid": 17, "make_world_lin": 18, "plot_camera": 19, "sensor2img": 20, "world2imag": 21, "coordin": [22, 23, 24, 25, 26, 27, 312, 334, 341, 343], "cartesian_from_cylindr": 22, "cartesian_from_spher": 23, "cylindrical_from_cartesian": 24, "cylindrical_from_spher": 25, "spherical_from_cartesian": 26, "spherical_from_cylindr": 27, "editor": [28, 273, 334], "transformeditor": 28, "plot_util": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 334], "arrow3d": 29, "frame": [30, 257, 289, 312, 341], "labeledfram": 31, "trajectori": [32, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 264, 271, 281, 292, 325, 334], "make_3d_axi": 33, "plot_box": 34, "plot_capsul": 35, "plot_con": 36, "plot_cylind": 37, "plot_ellipsoid": 38, "plot_length_vari": 39, "plot_mesh": 40, "plot_spher": 41, "plot_vector": 42, "remove_fram": 43, "rotat": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 270, 275, 284, 285, 290, 297, 321, 334, 336, 339, 341], "active_matrix_from_angl": 44, "active_matrix_from_extrinsic_euler_xyx": 45, "active_matrix_from_extrinsic_euler_xyz": 46, "active_matrix_from_extrinsic_euler_xzx": 47, "active_matrix_from_extrinsic_euler_xzi": 48, "active_matrix_from_extrinsic_euler_yxi": 49, "active_matrix_from_extrinsic_euler_yxz": 50, "active_matrix_from_extrinsic_euler_yzx": 51, "active_matrix_from_extrinsic_euler_yzi": 52, "active_matrix_from_extrinsic_euler_zxi": 53, "active_matrix_from_extrinsic_euler_zxz": 54, "active_matrix_from_extrinsic_euler_zyx": 55, "active_matrix_from_extrinsic_euler_zyz": 56, "active_matrix_from_extrinsic_roll_pitch_yaw": 57, "active_matrix_from_intrinsic_euler_xyx": 58, "active_matrix_from_intrinsic_euler_xyz": 59, "active_matrix_from_intrinsic_euler_xzx": 60, "active_matrix_from_intrinsic_euler_xzi": 61, "active_matrix_from_intrinsic_euler_yxi": 62, "active_matrix_from_intrinsic_euler_yxz": 63, "active_matrix_from_intrinsic_euler_yzx": 64, "active_matrix_from_intrinsic_euler_yzi": 65, "active_matrix_from_intrinsic_euler_zxi": 66, "active_matrix_from_intrinsic_euler_zxz": 67, "active_matrix_from_intrinsic_euler_zyx": 68, "active_matrix_from_intrinsic_euler_zyz": 69, "angle_between_vector": 70, "assert_axis_angle_equ": 71, "assert_compact_axis_angle_equ": 72, "assert_euler_xyz_equ": 73, "assert_euler_zyx_equ": 74, "assert_quaternion_equ": 75, "assert_rotation_matrix": 76, "axis_angle_from_compact_axis_angl": 77, "axis_angle_from_matrix": 78, "axis_angle_from_quaternion": 79, "axis_angle_from_two_direct": 80, "axis_angle_slerp": 81, "check_axis_angl": 82, "check_compact_axis_angl": 83, "check_matrix": 84, "check_quaternion": [85, 86], "check_rotor": 87, "check_skew_symmetric_matrix": 88, "compact_axis_angl": 89, "compact_axis_angle_from_matrix": 90, "compact_axis_angle_from_quaternion": 91, "concatenate_quaternion": 92, "concatenate_rotor": 93, "cross_product_matrix": 94, "euler_xyz_from_matrix": 95, "euler_zyx_from_matrix": 96, "extrinsic_euler_xyx_from_active_matrix": 97, "extrinsic_euler_xyz_from_active_matrix": 98, "extrinsic_euler_xzx_from_active_matrix": 99, "extrinsic_euler_xzy_from_active_matrix": 100, "extrinsic_euler_yxy_from_active_matrix": 101, "extrinsic_euler_yxz_from_active_matrix": 102, "extrinsic_euler_yzx_from_active_matrix": 103, "extrinsic_euler_yzy_from_active_matrix": 104, "extrinsic_euler_zxy_from_active_matrix": 105, "extrinsic_euler_zxz_from_active_matrix": 106, "extrinsic_euler_zyx_from_active_matrix": 107, "extrinsic_euler_zyz_from_active_matrix": 108, "geometric_product": 109, "intrinsic_euler_xyx_from_active_matrix": 110, "intrinsic_euler_xyz_from_active_matrix": 111, "intrinsic_euler_xzx_from_active_matrix": 112, "intrinsic_euler_xzy_from_active_matrix": 113, "intrinsic_euler_yxy_from_active_matrix": 114, "intrinsic_euler_yxz_from_active_matrix": 115, "intrinsic_euler_yzx_from_active_matrix": 116, "intrinsic_euler_yzy_from_active_matrix": 117, "intrinsic_euler_zxy_from_active_matrix": 118, "intrinsic_euler_zxz_from_active_matrix": 119, "intrinsic_euler_zyx_from_active_matrix": 120, "intrinsic_euler_zyz_from_active_matrix": 121, "matrix_from": 122, "matrix_from_angl": 123, "matrix_from_axis_angl": 124, "matrix_from_compact_axis_angl": 125, "matrix_from_euler_xyz": 126, "matrix_from_euler_zyx": 127, "matrix_from_quaternion": 128, "matrix_from_rotor": 129, "matrix_from_two_vector": 130, "norm_angl": 131, "norm_axis_angl": 132, "norm_compact_axis_angl": 133, "norm_matrix": 134, "passive_matrix_from_angl": 136, "perpendicular_to_vector": 137, "pick_closest_quaternion": 138, "plane_basis_from_norm": 139, "plane_normal_from_bivector": 140, "plot_axis_angl": 141, "plot_basi": 142, "plot_bivector": 143, "q_conj": 144, "q_prod_vector": 145, "quaternion_diff": 146, "quaternion_dist": 147, "quaternion_from_axis_angl": 148, "quaternion_from_compact_axis_angl": 149, "quaternion_from_matrix": 150, "quaternion_gradi": 151, "quaternion_integr": 152, "quaternion_slerp": 153, "quaternion_wxyz_from_xyzw": 154, "quaternion_xyzw_from_wxyz": 155, "random_axis_angl": 156, "random_compact_axis_angl": 157, "random_quaternion": 158, "random_vector": 159, "rotor_appli": 160, "rotor_from_plane_angl": 161, "rotor_from_two_direct": 162, "rotor_revers": 163, "rotor_slerp": 164, "vector_project": 165, "wedg": 166, "batch_concatenate_dual_quaternion": 167, "batch_dq_conj": 168, "batch_dq_prod_vector": 169, "concat_many_to_on": 170, "concat_one_to_mani": 171, "dual_quaternions_from_pq": 172, "exponential_coordinates_from_transform": [173, 206], "invert_transform": [174, 208], "mirror_screw_axis_direct": 175, "plot_trajectori": 176, "pqs_from_dual_quaternion": 177, "pqs_from_transform": 178, "transforms_from_exponential_coordin": 179, "transforms_from_pq": 180, "transform_manag": [181, 334], "transformmanag": 181, "transform": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 273, 282, 286, 298, 302, 303, 304, 317, 334, 338, 340, 341, 342, 343], "adjoint_from_transform": 182, "assert_screw_parameters_equ": 183, "assert_transform": 184, "assert_unit_dual_quaternion": 185, "assert_unit_dual_quaternion_equ": 186, "check_dual_quaternion": 187, "check_exponential_coordin": 188, "check_pq": 189, "check_screw_axi": 190, "check_screw_matrix": 191, "check_screw_paramet": 192, "check_transform": 193, "check_transform_log": 194, "concat": 195, "concatenate_dual_quaternion": 196, "dq_conj": 197, "dq_prod_vector": 198, "dq_q_conj": 199, "dual_quaternion_from_pq": 200, "dual_quaternion_from_screw_paramet": 201, "dual_quaternion_from_transform": 202, "dual_quaternion_pow": 203, "dual_quaternion_sclerp": 204, "exponential_coordinates_from_screw_axi": 205, "exponential_coordinates_from_transform_log": 207, "norm_exponential_coordin": 209, "plot_screw": 210, "plot_transform": 211, "pq_from_dual_quaternion": 212, "pq_from_transform": 213, "random_screw_axi": 214, "random_transform": 215, "rotate_transform": 216, "scale_transform": 217, "screw_axis_from_exponential_coordin": 218, "screw_axis_from_screw_matrix": 219, "screw_axis_from_screw_paramet": 220, "screw_matrix_from_screw_axi": 221, "screw_matrix_from_transform_log": 222, "screw_parameters_from_dual_quaternion": 223, "screw_parameters_from_screw_axi": 224, "transform_from": 226, "transform_from_dual_quaternion": 227, "transform_from_exponential_coordin": 228, "transform_from_pq": 229, "transform_from_transform_log": 230, "transform_log_from_exponential_coordin": 231, "transform_log_from_screw_matrix": 232, "transform_log_from_transform": 233, "translate_transform": 234, "vector_to_direct": 235, "vector_to_point": 236, "vectors_to_direct": 237, "vectors_to_point": 238, "urdf": [239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 283, 305, 306, 309, 326, 330, 331, 334], "box": [239, 250, 278, 313], "cylind": [240, 254, 286, 297, 317, 322], "geometri": [241, 295], "joint": [242, 305, 330], "link": 243, "mesh": [244, 260, 291, 306, 320, 326, 331], "sphere": [245, 263, 299, 329], "urdftransformmanag": 246, "initialize_urdf_transform_manag": 247, "parse_urdf": 248, "visual": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 312, 315, 316, 317, 318, 319, 320, 322, 327, 329, 332, 334], "artist": [249, 311], "capsul": [252, 315], "cone": [253, 316], "ellipsoid": [255, 319], "figur": [256, 266, 274], "graph": 258, "line3d": 259, "plane": [261, 327], "pointcollection3d": 262, "vector3d": 265, "interpol": [267, 269, 287], "between": [267, 269], "axi": [267, 275, 276, 334, 339], "angl": [267, 275, 276, 288, 334, 336, 339], "represent": [267, 275, 276, 279, 314, 338], "quaternion": [268, 269, 287, 293, 294, 334, 339, 343], "integr": [268, 293], "orient": 269, "anim": [270, 271, 274, 321, 323, 324, 325, 326, 333], "comput": [272, 308, 310], "time": [272, 308, 310], "matplotlib": 274, "3d": [274, 279, 314, 339, 343], "gui": 274, "applic": 274, "from": [276, 290, 336], "two": [276, 290], "direct": 276, "vector": [276, 290, 307, 332], "plot": [277, 278, 286, 289, 291, 295, 298, 299, 301, 302, 307, 313, 328, 334], "bivector": 277, "project": 280, "collis": 283, "object": 283, "compar": 284, "variou": 284, "definit": 284, "convent": [285, 336, 341], "passiv": [285, 341], "activ": [285, 341], "extrins": [285, 341], "intrins": [285, 341], "dual": [287, 334, 343], "euler": [288, 336, 339], "respect": 289, "differ": 289, "refer": [289, 338, 339, 343], "construct": 290, "matrix": [290, 334, 336, 339, 343], "pose": [292, 338], "slerp": 294, "random": 295, "robot": [296, 324], "through": 298, "screw": [298, 334], "motion": 298, "spheric": 300, "grid": 300, "straight": 301, "line": [301, 323], "path": 301, "concaten": 303, "manag": [304, 340], "render": 309, "add": 311, "remov": 311, "wrench": [318, 322], "scatter": 328, "api": [334, 336], "document": 334, "input": 334, "valid": 334, "function": 334, "convers": 334, "rotor": [334, 339], "oper": 334, "test": 334, "util": 334, "deprec": 334, "posit": [334, 343], "paramet": 334, "exponenti": [334, 343], "logarithm": [334, 343], "appli": 334, "24": 336, "rang": 336, "gimbal": 336, "lock": 336, "other": [336, 341], "name": [336, 341], "instal": 337, "citat": 337, "notat": 338, "dualiti": 338, "so": 339, "3": [339, 343], "ambigu": 341, "right": 341, "hand": 341, "vs": 341, "left": 341, "system": 341, "alibi": 341, "alia": 341, "pre": 341, "multipli": 341, "post": 341, "softwar": 341, "model": 342, "se": 343, "twist": 343}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})